{"version":3,"sources":["actions/actionTypes.js","constants.js","utils.js","actions/statisticsActions.js","reducers/initialState.js","reducers/statisticsReducer.js","reducers/filtersReducer.js","reducers/rootReducer.js","containers/AllMeasures.js","containers/CurrentSituation.js","containers/Hospitalisations.js","components/AllMeasuresChart/CustomTooltip.js","components/ChartTitle.js","components/AllMeasuresChart/AllMeasuresChart.js","components/CurrentSituationPanel.js","components/HospitalisationsPanel.js","components/LanguageToggle.js","Layout.js","Main.js","App.js","index.js"],"names":["FETCH_COUNTRY_STATISTICS","SET_COUNTRY_WIDE_FILTER","FETCH_COUNTRY_TOTALS","FETCH_HOSPITALISATIONS","NUMBER_OF_TESTS_MEASURE_ID","NUMBER_OF_POSITIVE_CASES_MEASURE_ID","NUMBER_OF_DEATHS_MEASURE_ID","MEASURE_LABEL_TRANSLATION_KEY_MAP","HOSPITALISATION_AREA_SHORT_LABEL_TRANSLATION_KEY_MAP","HOSPITALISATION_AREA_LABEL_TRANSLATION_KEY_MAP","formatDate","date","locale","format","moment","Date","formatNumber","number","toLocaleString","MEASURES","getCountryStatistics","key","dataToShow","JSONstat","allMeasuresDaily","Dataset","toTable","type","content","filter","item","value","includes","measure","map","labels","days","dateweek2020010120201231","groupsByDate","reduce","result","resultData","Object","keys","forEach","arr","obj","val","push","fetchCountryStatistics","data","fetchCountryTotals","additionalStatistics","allTimeTotals","fetchHospitalisations","areas","hospitalisationsByArea","currentHospitalisationsByArea","statistics","countryStatistics","items","loaded","countryTotals","hospitalisations","filters","countryWide","selectedMeasures","selectedRegionId","statisticsReducer","combineReducers","state","initialState","action","filtersReducer","countryWideFilter","rootReducer","localize","localizeReducer","mapStateToProps","translate","getTranslate","currentLanguage","getActiveLanguage","code","mapDispatchToProps","dispatch","statisticsActions","bindActionCreators","CustomTooltip","_getFormattedDate","props","_getFormattedNumber","_renderMeasureLabel","measureId","translationKey","id","this","active","payload","label","separator","measureIds","length","point","colors","x","dataKey","stroke","className","style","color","React","Component","Title","Box","p","Typography","component","variant","align","gutterBottom","children","MEASURE_IDS","MEASURE_COLOR_MAP","DEFAULT_LINE_OPACITY","AllMeasuresChart","_formatXAxis","tickItem","_formatYAxis","_formatLegendItem","entry","_toggleMeasute","e","visibleMeasures","setState","_onLegendMouseEnter","o","opacity","_onLegendMouseLeave","Paper","width","height","margin","top","right","bottom","left","tickFormatter","formatter","onClick","onMouseOver","onMouseOut","strokeOpacity","hide","dot","fill","fillOpacity","connect","Container","CurrentSituationPanel","_formatDate","_renderTile","lavelTranslationId","Grid","xs","day","population","numberOfTests","numberOfPositiveCases","numberOfDeaths","pt","pr","pb","pl","container","justify","spacing","direction","alignItems","IN_PATIENT_CARE_MEASURE_ID","IN_INTENSIVE_CARE_MEASURE_ID","HospitalisationsPanel","_formatLooltipLabel","_formatLooltipItem","name","values","strokeDasharray","cursor","labelFormatter","position","BootstrapInput","withStyles","theme","root","marginTop","input","borderRadius","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","LanguageToggle","_onLanguageChange","event","target","setActiveLanguage","languages","classes","FormControl","formControl","Select","native","activeLanguage","onChange","lang","minWidth","withLocalize","footerItems","title","links","url","text","Footer","footer","sm","Link","href","rel","Copyright","getFullYear","Layout","fixedHeightPaper","clsx","fixedHeight","Fragment","CssBaseline","AppBar","elevation","appBar","Toolbar","toolbar","noWrap","toolbarTitle","maxWidth","heroContent","thlLastUpdateLink","thlMapLink","panel","thlLink","mt","ul","listStyle","white","borderBottom","divider","flexWrap","flexGrow","link","cardHeader","grey","cardPricing","display","justifyContent","marginBottom","borderTop","paddingTop","paddingBottom","breakpoints","up","LANGUAGE_CODE","Main","_initTranslations","initialize","options","renderToStaticMarkup","renderInnerHtml","defaultLanguage","addTranslationForLanguage","enTranslations","ruTranslations","App","store","createStore","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a8f5eeb.chunk.js","sourcesContent":["export const SET_LANGUAGE = 'SET_LANGUAGE';\nexport const FETCH_COUNTRY_STATISTICS = 'FETCH_COUNTRY_STATISTICS';\nexport const SET_COUNTRY_WIDE_FILTER = 'SET_COUNTRY_WIDE_FILTER';\nexport const FETCH_COUNTRY_TOTALS = 'FETCH_COUNTRY_TOTALS';\nexport const FETCH_HOSPITALISATIONS = 'FETCH_HOSPITALISATIONS';","export const STATE = { \n    INITIAL: \"initial\",\n    SYNCHED: \"synched\"\n};\n\nexport const NUMBER_OF_TESTS_MEASURE_ID = \"445356\";\nexport const NUMBER_OF_POSITIVE_CASES_MEASURE_ID = \"444833\";\nexport const NUMBER_OF_DEATHS_MEASURE_ID = \"492118\";\n\nexport const MEASURE_LABEL_TRANSLATION_KEY_MAP = {\n    [NUMBER_OF_TESTS_MEASURE_ID]: \"statistics.numberOfTests\",\n    [NUMBER_OF_POSITIVE_CASES_MEASURE_ID]: \"statistics.numberOfPositiveCases\",\n    [NUMBER_OF_DEATHS_MEASURE_ID]: \"statistics.numberOfDeaths\"\n};\n\nexport const ALL_HOSPITALISATION_AREA_ID = 0;\nexport const HELSINKI_HOSPITALISATION_AREA_ID = 1;\nexport const KUOPIO_HOSPITALISATION_AREA_ID = 2;\nexport const OULU_HOSPITALISATION_AREA_ID = 3;\nexport const TAMPERE_HOSPITALISATION_AREA_ID = 4;\nexport const TURKU_HOSPITALISATION_AREA_ID = 5;\n\nexport const HOSPITALISATION_AREA_SHORT_LABEL_TRANSLATION_KEY_MAP = {\n    [ALL_HOSPITALISATION_AREA_ID]: \"statistics.nationwide\",\n    [HELSINKI_HOSPITALISATION_AREA_ID]: \"geography.helsinki_\",\n    [KUOPIO_HOSPITALISATION_AREA_ID]: \"geography.kuopio_\",\n    [OULU_HOSPITALISATION_AREA_ID]: \"geography.oulu_\",\n    [TAMPERE_HOSPITALISATION_AREA_ID]: \"geography.tampere_\",\n    [TURKU_HOSPITALISATION_AREA_ID]: \"geography.turku_\",\n};\n\nexport const HOSPITALISATION_AREA_LABEL_TRANSLATION_KEY_MAP = {\n    [ALL_HOSPITALISATION_AREA_ID]: \"statistics.nationwideTotal\",\n    [HELSINKI_HOSPITALISATION_AREA_ID]: \"geography.helsinki_university_area\",\n    [KUOPIO_HOSPITALISATION_AREA_ID]: \"geography.kuopio_university_area\",\n    [OULU_HOSPITALISATION_AREA_ID]: \"geography.oulu_university_area\",\n    [TAMPERE_HOSPITALISATION_AREA_ID]: \"geography.tampere_university_area\",\n    [TURKU_HOSPITALISATION_AREA_ID]: \"geography.turku_university_area\",\n};\n\n/*\n\t\"areas\": [\n\t\t{ \n\t\t\t\"id\": 1,\n\t\t\t\"name\": \"Helsinki University Hospital catchment area\"\n\t\t},\n\t\t{ \n\t\t\t\"id\": 2,\n\t\t\t\"name\": \"Kuopio University Hospital catchment area\"\n\t\t},\n\t\t{ \n\t\t\t\"id\": 3,\n\t\t\t\"name\": \"Oulu University Hospital catchment area\"\n\t\t},\n\t\t{ \n\t\t\t\"id\": 4,\n\t\t\t\"name\": \"Tampere University Hospital catchment area\"\n\t\t},\n\t\t{ \n\t\t\t\"id\": 5,\n\t\t\t\"name\": \"Turku University Hospital catchment area + Åland\"\n\t\t}\n\t],\n*/","import moment from 'moment';\nimport 'moment/locale/ru';\nimport 'moment/locale/en-gb';\n\nexport function groupBy(items, key) {\n    return items.reduce(\n        (result, item) => ({\n            ...result,\n            [item[key]]: [\n                ...(result[item[key]] || []),\n                item,\n            ],\n        }), {});\n}\n\nexport function formatDate(date, locale, format) {\n    return moment(new Date(date)).locale(locale).format(format);\n}\n\nexport function formatNumber(number, locale) { \n    return number.toLocaleString(locale);\n}","import { FETCH_COUNTRY_STATISTICS, FETCH_COUNTRY_TOTALS, FETCH_HOSPITALISATIONS } from './actionTypes';\nimport { allMeasuresDaily, additionalStatistics, labels } from '../data';\nimport JSONstat from \"jsonstat-toolkit\";\nimport {NUMBER_OF_TESTS_MEASURE_ID, NUMBER_OF_POSITIVE_CASES_MEASURE_ID, NUMBER_OF_DEATHS_MEASURE_ID} from '../constants';\nimport {groupBy} from \"../utils\";\n\n// show only number of tests, positive cases and deaths\nconst MEASURES = [\n    NUMBER_OF_TESTS_MEASURE_ID, \n    NUMBER_OF_POSITIVE_CASES_MEASURE_ID, \n    NUMBER_OF_DEATHS_MEASURE_ID\n];\n\nfunction getCountryStatistics() {\n    const J = JSONstat(allMeasuresDaily);\n    const data = J.Dataset(0).toTable({ type : \"arrobj\", content: \"id\"});\n    const dataToShow = data\n        .filter(item => item.value != null && MEASURES.includes(item.measure))\n        .map(item => {\n            var date = labels.days[item.dateweek2020010120201231];\n            return { \n                measure: item.measure,  \n                value: +item.value,\n                date: date\n            };\n        });    \n    const groupsByDate = groupBy(dataToShow, \"date\");\n    const resultData = [];\n    Object.keys(groupsByDate).forEach(key => {\n        const arr = groupsByDate[key];\n        let obj = {date: key};\n        arr.forEach(val => {\n            obj[val.measure] = val.value;\n        });\n        resultData.push(obj);\n    });\n\n    return resultData;\n}\n\nfunction getCountryTotals() {\n    return additionalStatistics.allTimeTotals;\n}\n\nfunction getHospitalisations() {\n    return {\n        areas: additionalStatistics.areas,\n        hospitalisationsByArea: additionalStatistics.currentHospitalisationsByArea\n    };\n}\n\nexport function fetchCountryStatistics() {\n    return { type: FETCH_COUNTRY_STATISTICS, data: getCountryStatistics() };\n}\n\nexport function fetchCountryTotals() {\n    return { type: FETCH_COUNTRY_TOTALS, data: getCountryTotals() };\n}\n\nexport function fetchHospitalisations() {\n    return { type: FETCH_HOSPITALISATIONS, data: getHospitalisations() };\n}","import {NUMBER_OF_TESTS_MEASURE_ID, NUMBER_OF_POSITIVE_CASES_MEASURE_ID, NUMBER_OF_DEATHS_MEASURE_ID} from '../constants';\n\nexport default {\n    statistics: {\n        countryStatistics: {\n            items: [],\n            loaded: false\n        },\n        countryTotals: {\n            data: {},\n            loaded: false\n        },\n        hospitalisations: {\n            data: {},\n            loaded: false\n        }\n    },\n    filters: {\n        countryWide: {\n            selectedMeasures: [\n                NUMBER_OF_TESTS_MEASURE_ID, \n                NUMBER_OF_POSITIVE_CASES_MEASURE_ID, \n                NUMBER_OF_DEATHS_MEASURE_ID\n            ],\n            selectedRegionId: null\n        }\n    }\n};","import { combineReducers } from 'redux';\nimport { FETCH_COUNTRY_STATISTICS, FETCH_COUNTRY_TOTALS, FETCH_HOSPITALISATIONS } from '../actions';\nimport initialState from './initialState';\n\nfunction countryStatistics(state = initialState.statistics.countryStatistics, action) {\n    switch (action.type) {\n        case FETCH_COUNTRY_STATISTICS:\n            return {\n                items: [...action.data],\n                loaded: true\n            };\n        default:\n            return state;\n    }\n}\n\nfunction countryTotals(state = initialState.statistics.countryTotals, action) {\n    switch (action.type) {\n        case FETCH_COUNTRY_TOTALS:\n            return {\n                data: {...action.data},\n                loaded: true\n            };\n        default:\n            return state;\n    }\n}\n\nfunction hospitalisations(state = initialState.statistics.hospitalisations, action) {\n    switch (action.type) {\n        case FETCH_HOSPITALISATIONS:\n            return {\n                data: {...action.data},\n                loaded: true\n            };\n        default:\n            return state;\n    }\n}\n\nconst statisticsReducer = combineReducers({\n    countryStatistics,\n    countryTotals,\n    hospitalisations\n});\n\nexport default statisticsReducer;","import { SET_COUNTRY_WIDE_FILTER } from '../actions';\nimport initialState from './initialState';\n\n\nfunction filtersReducer(state = initialState.filters, action) {\n    switch (action.type) {\n    case SET_COUNTRY_WIDE_FILTER:\n        return {\n            ...state,\n            countryWide: action.countryWideFilter\n        };\n    default:\n        return state;\n    }\n}\n\nexport default filtersReducer;","import { combineReducers } from 'redux';\nimport { localizeReducer } from \"react-localize-redux\";\nimport statisticsReducer from './statisticsReducer';\nimport filtersReducer from './filtersReducer';\n\nconst rootReducer = combineReducers({\n    localize: localizeReducer,\n    statistics: statisticsReducer,\n    filters: filtersReducer\n});\n\nexport default rootReducer;","import { getTranslate, getActiveLanguage } from 'react-localize-redux';\nimport { bindActionCreators } from 'redux';\nimport { statisticsActions } from '../actions';\n\nexport const mapStateToProps = state => {\n    return {\n        translate: getTranslate(state.localize),\n        currentLanguage: getActiveLanguage(state.localize).code,\n        countryStatistics: state.statistics.countryStatistics\n    };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        statisticsActions: bindActionCreators(statisticsActions, dispatch)\n    };\n};","import { getTranslate, getActiveLanguage } from 'react-localize-redux';\nimport { bindActionCreators } from 'redux';\nimport { statisticsActions } from '../actions';\n\nexport const mapStateToProps = state => {\n    return {\n        translate: getTranslate(state.localize),\n        currentLanguage: getActiveLanguage(state.localize).code,\n        countryTotals: state.statistics.countryTotals\n    };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        statisticsActions: bindActionCreators(statisticsActions, dispatch)\n    };\n};","import { getTranslate, getActiveLanguage } from 'react-localize-redux';\nimport { bindActionCreators } from 'redux';\nimport { statisticsActions } from '../actions';\n\nexport const mapStateToProps = state => {\n    return {\n        translate: getTranslate(state.localize),\n        currentLanguage: getActiveLanguage(state.localize).code,\n        hospitalisations: state.statistics.hospitalisations\n    };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        statisticsActions: bindActionCreators(statisticsActions, dispatch)\n    };\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Translate } from \"react-localize-redux\";\nimport { formatDate } from '../../utils';\nimport {MEASURE_LABEL_TRANSLATION_KEY_MAP} from '../../constants';\nimport './CustomTooltip.css';\n\nclass CustomTooltip extends React.Component {\n    _getFormattedDate = (date) => {\n        return formatDate(date, this.props.currentLanguage, 'DD MMMM YYYY');\n    }\n\n    _getFormattedNumber = (value) => { \n        return value ? value.toLocaleString(this.props.currentLanguage) : value;\n    }\n\n    _renderMeasureLabel = (measureId) => {\n        const translationKey = MEASURE_LABEL_TRANSLATION_KEY_MAP[measureId];\n        return <Translate id={translationKey} />;\n    }\n  \n    render() {\n        const { active, payload, label, separator, measureIds } = this.props;\n\n        if(!active || !payload.length) {\n            return null;\n        }\n\n        const point = payload[0].payload;\n        const colors = {};\n\n        payload.forEach(x => {\n            colors[x.dataKey] = x.stroke;\n        });\n\n        return (\n            <div className=\"custom-tooltip\">\n                <div className=\"date\">\n                    {this._getFormattedDate(label)}\n                </div>\n                {\n                    measureIds.map(id => (\n                        <div key={id} className=\"measure\" style={colors[id] ? {color: colors[id] } : null}>\n                            {this._renderMeasureLabel(id)}\n                            {separator}\n                            {this._getFormattedNumber(point[id])}\n                        </div>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nCustomTooltip.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    type: PropTypes.string,\n    payload: PropTypes.array,\n    label: PropTypes.string,\n    separator: PropTypes.string,\n    measureIds: PropTypes.array\n};\n\nexport default CustomTooltip;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function Title(props) {\n    return (\n        <Box p={3}>\n            <Typography component=\"h2\" variant=\"h5\" color=\"textPrimary\" align=\"center\" gutterBottom>\n                {props.children}\n            </Typography>\n        </Box>    \n    );\n}\n\nTitle.propTypes = {\n    children: PropTypes.node,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    ComposedChart, Line, Area, ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n    Tooltip, Legend\n} from 'recharts';\nimport { Translate } from \"react-localize-redux\";\nimport { formatDate, formatNumber } from '../../utils';\nimport {AllMeasuresChartContainer as Container} from '../../containers';\nimport {NUMBER_OF_TESTS_MEASURE_ID, NUMBER_OF_POSITIVE_CASES_MEASURE_ID, NUMBER_OF_DEATHS_MEASURE_ID, MEASURE_LABEL_TRANSLATION_KEY_MAP} from '../../constants';\nimport CustomTooltip from './CustomTooltip';\nimport Paper from '@material-ui/core/Paper';\nimport ChartTitle from '../ChartTitle';\nimport './AllMeasuresChart.css';\n\nconst MEASURE_IDS = [NUMBER_OF_TESTS_MEASURE_ID, NUMBER_OF_POSITIVE_CASES_MEASURE_ID, NUMBER_OF_DEATHS_MEASURE_ID];\n\nconst MEASURE_COLOR_MAP = {\n    [NUMBER_OF_TESTS_MEASURE_ID]: \"#EA5F89\", // \"#ff7c43\",  \n    [NUMBER_OF_POSITIVE_CASES_MEASURE_ID]: \"#9B3192\", // \"#a05195\", \n    [NUMBER_OF_DEATHS_MEASURE_ID]: \"#57167E\" // \"#2f4b7c\" \n};\n\nconst DEFAULT_LINE_OPACITY = 0.8;\n  \nclass AllMeasuresChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            opacity: {\n                [NUMBER_OF_TESTS_MEASURE_ID]: DEFAULT_LINE_OPACITY,\n                [NUMBER_OF_POSITIVE_CASES_MEASURE_ID]: DEFAULT_LINE_OPACITY,\n                [NUMBER_OF_DEATHS_MEASURE_ID]: DEFAULT_LINE_OPACITY\n            },\n            visibleMeasures: [\n                NUMBER_OF_TESTS_MEASURE_ID, \n                NUMBER_OF_POSITIVE_CASES_MEASURE_ID, \n                NUMBER_OF_DEATHS_MEASURE_ID\n            ]\n        };\n    }\n\n    componentDidMount() {\n        if(!this.props.countryStatistics.loaded) {\n            this.props.statisticsActions.fetchCountryStatistics();\n        }\n    }\n\n    _formatXAxis = (tickItem) => { \n        return formatDate(tickItem, this.props.currentLanguage, 'DD MMM');\n    }\n\n    _formatYAxis = (tickItem) => { \n        return formatNumber(tickItem, this.props.currentLanguage);\n    }\n\n    _formatLegendItem = (value, entry) => {\n        const translationKey = MEASURE_LABEL_TRANSLATION_KEY_MAP[value];\n        return <Translate id={translationKey} />;\n    }\n\n    _toggleMeasute = (e) => {\n        const measureId = e.dataKey;\n        const visibleMeasures = this.state.visibleMeasures;\n\n        this.setState({\n            visibleMeasures: visibleMeasures.includes(measureId) ?\n                visibleMeasures.filter(x => x !== measureId) :\n                [...visibleMeasures, measureId]\n        });\n    }\n\n    _onLegendMouseEnter = (o) => {\n        const { dataKey } = o;\n        const { opacity } = this.state;\n    \n  \t    this.setState({\n    \t    opacity: { ...opacity, [dataKey]: 1 }\n        });\n    }\n\n    _onLegendMouseLeave = (o) => {\n        const { dataKey } = o;\n        const { opacity } = this.state;\n    \n  \t    this.setState({\n    \t    opacity: { \n                ...opacity, \n                [dataKey]: DEFAULT_LINE_OPACITY \n            },\n        });\n    }\n      \n    render() {\n        const { className, countryStatistics } = this.props;\n        const { visibleMeasures, opacity } = this.state;\n\n        return (\n            <Paper className={className}>\n                <ChartTitle>\n                    <Translate id=\"statistics.allMeasuresChartTitle\" />\n                </ChartTitle>\n                {\n                    countryStatistics.loaded ?\n                        <div style={{ width: '100%', height: '500px'}}>\n                            <ResponsiveContainer>\n                                <ComposedChart\n                                    data={countryStatistics.items}\n                                    margin={{\n                                        top: 20, right: 30, bottom: 20, left: 20,\n                                    }}\n                                >\n                                    <CartesianGrid stroke=\"#f5f5f5\" />\n                                    <XAxis dataKey=\"date\" tickFormatter={this._formatXAxis}/>\n                                    <YAxis tickFormatter={this._formatYAxis}/>\n                                    <Tooltip content={\n                                        <CustomTooltip \n                                            translate={this.props.translate} \n                                            currentLanguage={this.props.currentLanguage}\n                                            measureIds={MEASURE_IDS}\n                                        />}/>\n                                    <Legend \n                                        formatter={this._formatLegendItem} \n                                        onClick={this._toggleMeasute}\n                                        onMouseOver={this._onLegendMouseEnter}\n                                        onMouseOut={this._onLegendMouseLeave}\n                                    />\n                                    <Line \n                                        type=\"monotone\" \n                                        strokeOpacity={opacity[NUMBER_OF_TESTS_MEASURE_ID]} \n                                        dataKey={NUMBER_OF_TESTS_MEASURE_ID} \n                                        stroke={MEASURE_COLOR_MAP[NUMBER_OF_TESTS_MEASURE_ID]}\n                                        hide={!visibleMeasures.includes(NUMBER_OF_TESTS_MEASURE_ID)}\n                                        dot={false}\n                                    />\n                                    {\n                                        [NUMBER_OF_POSITIVE_CASES_MEASURE_ID, NUMBER_OF_DEATHS_MEASURE_ID].map(id => (\n                                            <Area \n                                                key={id}\n                                                type=\"monotone\" \n                                                dataKey={id} \n                                                hide={!visibleMeasures.includes(id)}\n                                                fill={MEASURE_COLOR_MAP[id]}\n                                                stroke={MEASURE_COLOR_MAP[id]}\n                                                fillOpacity={opacity[id]}\n                                            />\n                                        ))\n                                    }\n                            </ComposedChart>\n                        </ResponsiveContainer>\n                    </div> :\n                    <Translate id={\"loading\"} />\n                }\n            </Paper>\n          );\n    }\n}\n\nAllMeasuresChart.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    className: PropTypes.string,\n    countryStatistics: PropTypes.object.isRequired,\n    statisticsActions: PropTypes.object,\n    filtersActions: PropTypes.object\n};\n\nexport default connect(Container.mapStateToProps, Container.mapDispatchToProps)(AllMeasuresChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Translate } from \"react-localize-redux\";\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport {CurrentSituationContainer as Container} from '../containers';\nimport ChartTitle from './ChartTitle';\nimport { formatDate, formatNumber } from '../utils';\n\nclass CurrentSituationPanel extends React.Component {\n    componentDidMount() {\n        if(!this.props.countryTotals.loaded) {\n            this.props.statisticsActions.fetchCountryTotals();\n        }\n    }\n\n    _formatDate = (date) => { \n        return formatDate(date, this.props.currentLanguage, 'DD MMMM YYYY');\n    }\n\n    _renderTile = (lavelTranslationId, value) => {\n        return (\n            <Grid item xs>\n                <Paper>\n                    <Box p={2}>\n                        <Typography component=\"p\" variant=\"h6\" color=\"textPrimary\" align=\"center\" gutterBottom>\n                            <Translate id={lavelTranslationId} />\n                        </Typography>\n                        <Typography component=\"p\" variant=\"h5\" color=\"textPrimary\" align=\"center\" gutterBottom>\n                            {formatNumber(value, this.props.currentLanguage)}\n                        </Typography>\n                    </Box>\n                </Paper>\n            </Grid>\n        );\n    }\n      \n    render() {\n        const { countryTotals, className } = this.props;\n\n        if(!countryTotals.loaded) {\n            return (\n                <Paper className={className}>\n                    <Translate id={\"loading\"} />\n                </Paper>\n            );\n        }\n\n        const { day, population, numberOfTests, numberOfPositiveCases, numberOfDeaths } = countryTotals.data;\n\n        return (\n            <Paper className={className}>\n                <ChartTitle>\n                    <Translate id=\"statistics.currentSituationTitle\" data={{ date: this._formatDate(day) }}/>\n                </ChartTitle>\n                <Box pt={0} pr={2} pb={2} pl={2}>\n                    <Grid container justify=\"center\" spacing={2} direction=\"row\" alignItems=\"flex-start\">\n                        {this._renderTile(\"statistics.population\", population)}\n                        {this._renderTile(\"statistics.totalNumberOfTests\", numberOfTests)}\n                        {this._renderTile(\"statistics.totalNumberOfPositiveCases\", numberOfPositiveCases)}\n                        {this._renderTile(\"statistics.totalNumberOfDeaths\", numberOfDeaths)}\n                    </Grid>\n                </Box>\n            </Paper>\n          );\n    }\n}\n\nCurrentSituationPanel.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    className: PropTypes.string,\n    countryTotals: PropTypes.object.isRequired,\n    statisticsActions: PropTypes.object\n};\n\nexport default connect(Container.mapStateToProps, Container.mapDispatchToProps)(CurrentSituationPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Translate } from \"react-localize-redux\";\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport {\n    BarChart, ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n    Tooltip, Legend, Bar, LabelList\n} from 'recharts';\nimport {HospitalisationsContainer as Container} from '../containers';\nimport ChartTitle from './ChartTitle';\nimport { formatDate, formatNumber } from '../utils';\nimport {HOSPITALISATION_AREA_SHORT_LABEL_TRANSLATION_KEY_MAP, HOSPITALISATION_AREA_LABEL_TRANSLATION_KEY_MAP} from '../constants';\n\nconst DEFAULT_BAR_OPACITY = 0.8;\nconst IN_PATIENT_CARE_MEASURE_ID = \"inpatientCare\";\nconst IN_INTENSIVE_CARE_MEASURE_ID = \"inIntensiveCare\";\n\nclass HospitalisationsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            opacity: {\n                [IN_PATIENT_CARE_MEASURE_ID]: DEFAULT_BAR_OPACITY,\n                [IN_INTENSIVE_CARE_MEASURE_ID]: DEFAULT_BAR_OPACITY\n            },\n            visibleMeasures: [\n                IN_PATIENT_CARE_MEASURE_ID, \n                IN_INTENSIVE_CARE_MEASURE_ID\n            ]\n        };\n    }\n\n    componentDidMount() {\n        if(!this.props.hospitalisations.loaded) {\n            this.props.statisticsActions.fetchHospitalisations();\n        }\n    }\n\n    _formatDate = (date) => { \n        return formatDate(date, this.props.currentLanguage, 'DD MMMM YYYY');\n    }\n\n    _formatXAxis = (tickItem) => { \n        const translationKey = HOSPITALISATION_AREA_SHORT_LABEL_TRANSLATION_KEY_MAP[tickItem]; \n        return this.props.translate(translationKey);\n    }\n\n    _formatYAxis = (tickItem) => { \n        return formatNumber(tickItem, this.props.currentLanguage);\n    }\n\n    _formatLegendItem = (value, entry) => {\n        const translationKey = `statistics.${value}`;\n        return <Translate id={translationKey} />;\n    }\n\n    _formatLooltipLabel = (value, entry) => {\n        const translationKey = HOSPITALISATION_AREA_LABEL_TRANSLATION_KEY_MAP[value]; \n        return this.props.translate(translationKey);\n    }\n\n    _formatLooltipItem = (value, name, props) => {\n        const translationKey = `statistics.${name}`;\n        return [\n            formatNumber(value, this.props.currentLanguage), \n            this.props.translate(translationKey)\n        ];\n    }\n\n    _toggleMeasute = (e) => {\n        const measureId = e.dataKey;\n        const visibleMeasures = this.state.visibleMeasures;\n\n        this.setState({\n            visibleMeasures: visibleMeasures.includes(measureId) ?\n                visibleMeasures.filter(x => x !== measureId) :\n                [...visibleMeasures, measureId]\n        });\n    }\n\n    _onLegendMouseEnter = (o) => {\n        const { dataKey } = o;\n        const { opacity } = this.state;\n    \n  \t    this.setState({\n    \t    opacity: { ...opacity, [dataKey]: 1 }\n        });\n    }\n\n    _onLegendMouseLeave = (o) => {\n        const { dataKey } = o;\n        const { opacity } = this.state;\n    \n  \t    this.setState({\n    \t    opacity: { \n                ...opacity, \n                [dataKey]: DEFAULT_BAR_OPACITY \n            },\n        });\n    }\n      \n    render() {\n        const { hospitalisations, className } = this.props;\n\n        if(!hospitalisations.loaded) {\n            return (\n                <Paper className={className}>\n                    <Translate id={\"loading\"} />\n                </Paper>\n            );\n        }\n\n        const { opacity, visibleMeasures } = this.state;\n        const { hospitalisationsByArea } = hospitalisations.data;\n        const day = hospitalisationsByArea.day;\n\n        return (\n            <Paper className={className}>\n                <ChartTitle>\n                    <Translate id=\"statistics.numberOfPeopleInHospitals\" data={{ date: this._formatDate(day) }}/>\n                </ChartTitle>\n                <div style={{ width: '100%', height: '300px'}}>\n                    <ResponsiveContainer>\n                        <BarChart\n                            data={hospitalisationsByArea.values}\n                            margin={{\n                                top: 20, right: 30, bottom: 20, left: 20,\n                            }}\n                        >\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"areaId\" tickFormatter={this._formatXAxis}/>\n                            <YAxis tickFormatter={this._formatYAxis}/>\n                            <Tooltip cursor={{ fill: \"#FFF1C9\", fillOpacity: 0.3 }} labelFormatter={this._formatLooltipLabel} formatter={this._formatLooltipItem}/>\n                            <Legend \n                                formatter={this._formatLegendItem}\n                                onClick={this._toggleMeasute}\n                                onMouseOver={this._onLegendMouseEnter}\n                                onMouseOut={this._onLegendMouseLeave}\n                            />\n                            <Bar \n                                dataKey={IN_PATIENT_CARE_MEASURE_ID} \n                                fill=\"#EA5F89\" \n                                fillOpacity={opacity[IN_PATIENT_CARE_MEASURE_ID]}\n                                hide={!visibleMeasures.includes(IN_PATIENT_CARE_MEASURE_ID)}\n                            >\n                                <LabelList dataKey={IN_PATIENT_CARE_MEASURE_ID} position=\"top\" />\n                            </Bar>\n                            <Bar \n                                dataKey={IN_INTENSIVE_CARE_MEASURE_ID} \n                                fill=\"#9B3192\" \n                                fillOpacity={opacity[IN_INTENSIVE_CARE_MEASURE_ID]}\n                                hide={!visibleMeasures.includes(IN_INTENSIVE_CARE_MEASURE_ID)}\n                            >\n                                <LabelList dataKey={IN_INTENSIVE_CARE_MEASURE_ID} position=\"top\" />\n                            </Bar>\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            </Paper>\n          );\n    }\n}\n\nHospitalisationsPanel.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    className: PropTypes.string,\n    hospitalisations: PropTypes.object.isRequired,\n    statisticsActions: PropTypes.object\n};\n\nexport default connect(Container.mapStateToProps, Container.mapDispatchToProps)(HospitalisationsPanel);\n","import React from \"react\";\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport { withStyles } from '@material-ui/core/styles';\n//import moment from 'moment';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 30,\n}});\n\nclass LanguageToggle extends React.Component {\n    _onLanguageChange = (event) => { \n        const locale = event.target.value;\n        this.props.setActiveLanguage(locale);\n    }\n\n    render() {\n        if(!this.props.languages.length) {\n            return null;\n        }\n\n        const { classes } = this.props;\n\n        return (\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <Select\n                    native\n                    value={this.props.activeLanguage.code}\n                    onChange={this._onLanguageChange}\n                    input={<BootstrapInput />}\n                >\n                    {this.props.languages.map(lang => (\n                        <option key={lang.code} value={lang.code}>\n                            {lang.name}\n                        </option>\n                    ))}\n                </Select>  \n            </FormControl>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(withLocalize(LanguageToggle));\n","import React from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { AllMeasuresChart, CurrentSituationPanel, LanguageToggle, HospitalisationsPanel } from './components';\n\nconst footerItems = [\n    {\n        title: 'layout.about',\n        links: [\n        {\n            url: \"https://bitbucket.org/Sufflava/coronavirus-statistics-in-finland/src/master/web-site/\",\n            text: \"layout.sourceCode\"\n        }, \n        {\n            url: \"https://bitbucket.org/Sufflava/coronavirus-statistics-in-finland/src/master/data/\",\n            text: \"layout.usedData\"\n        }, \n        {\n            url: \"https://sufflavus.github.io/\",\n            text: \"layout.developerWebSite\"\n        }]\n    },\n    {\n        title: 'layout.officialResources',\n        links: [\n        {\n            url: \"https://thl.fi/en/web/infectious-diseases-and-vaccinations/what-s-new/coronavirus-covid-19-latest-updates/situation-update-on-coronavirus\",\n            text: \"layout.thlLastUpdate\"\n        }, \n        {\n            url: \"https://experience.arcgis.com/experience/d40b2aaf08be4b9c8ec38de30b714f26\",\n            text: \"layout.statisticsOnMap\"\n        }, \n        {\n            url: \"https://thl.fi/en/web/thlfi-en/statistics/statistical-databases/open-data/confirmed-corona-cases-in-finland-covid-19-\",\n            text: \"layout.thlOpenDataApi\"\n        }]\n    }\n];\n\nfunction Footer() {\n    return (\n        <Grid container spacing={4} justify=\"space-evenly\">\n            {footerItems.map((footer) => (\n                <Grid item xs={12} sm={6} key={footer.title}>\n                    <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                        <Translate id={footer.title} />\n                    </Typography>\n                    <ul>\n                        {footer.links.map((item) => (\n                            <li key={item.text}>\n                                <Link href={item.url} target=\"_blank\" rel=\"noreferrer\" variant=\"subtitle1\" color=\"textSecondary\">\n                                    <Translate id={item.text} />\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </Grid>\n            ))}\n        </Grid>\n    );\n}\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            <Translate id=\"layout.copyright\" />{' '}\n            <Link color=\"inherit\" href=\"https://sufflavus.github.io/\" target=\"_blank\" rel=\"noreferrer\">\n                Tatiana Shatilova\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = theme => ({\n    '@global': {\n      ul: {\n        margin: 0,\n        padding: 0,\n        listStyle: 'none',\n      },\n    },\n    appBar: {\n      backgroundColor: theme.palette.white,\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n      flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n      flexGrow: 1,\n    },\n    link: {\n      margin: theme.spacing(1, 1.5),\n    },\n    heroContent: {\n      padding: theme.spacing(8, 0, 6),\n    },\n    cardHeader: {\n      backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n    },\n    cardPricing: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'baseline',\n      marginBottom: theme.spacing(2),\n    },\n    panel: {\n      marginBottom: theme.spacing(5),\n    },\n    footer: {\n      borderTop: `1px solid ${theme.palette.divider}`,\n      marginTop: theme.spacing(8),\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3),\n      [theme.breakpoints.up('sm')]: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6),\n      },\n    },\n  });\n\nclass Layout extends React.Component {\n    render() {\n        const { classes } = this.props;\n        const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                            <Translate id=\"layout.siteName\" />\n                        </Typography>\n                        {/*<nav>\n                            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n                            <Translate id=\"layout.menuCharts\" />\n                            </Link>\n                            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n                            <Translate id=\"layout.menuMap\" />\n                            </Link>\n                        </nav>*/}\n                        <LanguageToggle/>\n                    </Toolbar>\n                </AppBar>\n                {/* Hero unit */}\n                <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n                    <Box p={3}>\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            <Translate id=\"layout.pageTitle\" />\n                        </Typography>\n                        <Typography variant=\"h6\" align=\"left\" color=\"textSecondary\" component=\"p\">\n                            <Translate id=\"layout.pageAbout\" />\n                        </Typography>\n                        <Typography variant=\"h6\" align=\"left\" color=\"textSecondary\" component=\"p\">\n                            <Translate id=\"layout.officialDataInfo\" \n                                data={{ \n                                    thlLastUpdateLink: <Link href=\"https://thl.fi/en/web/infectious-diseases-and-vaccinations/what-s-new/coronavirus-covid-19-latest-updates/situation-update-on-coronavirus\" target=\"_blank\" rel=\"noreferrer\"><Translate id=\"layout.here\" /></Link>,\n                                    thlMapLink: <Link href=\"https://experience.arcgis.com/experience/d40b2aaf08be4b9c8ec38de30b714f26\" target=\"_blank\" rel=\"noreferrer\"><Translate id=\"layout.here\" /></Link>\n                                }} \n                            />\n                        </Typography>\n                    </Box>\n                </Container>\n                {/* End hero unit */}\n                <Container maxWidth=\"md\" component=\"main\">\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} className={classes.panel}>\n                            <CurrentSituationPanel className={classes.paper}/>\n                        </Grid>\n                        <Grid item xs={12} className={classes.panel}>\n                            <AllMeasuresChart className={fixedHeightPaper}/>\n                        </Grid>\n                        <Grid item xs={12} className={classes.panel}>\n                            <HospitalisationsPanel className={fixedHeightPaper}/>\n                            <Box pt={2}>\n                                <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n                                    <Translate id=\"layout.hospitalisationsAbout\" \n                                        data={{ \n                                            thlLink: <Link href=\"https://thl.fi/en/web/infectious-diseases-and-vaccinations/what-s-new/coronavirus-covid-19-latest-updates/situation-update-on-coronavirus\" target=\"_blank\" rel=\"noreferrer\"><Translate id=\"layout.here\" /></Link>,\n                                        }} \n                                    />\n                                </Typography>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Container>\n                {/* Footer */}\n                <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n                    <Footer/>\n                    <Box mt={5}>\n                        <Copyright />\n                    </Box>\n                </Container>\n                {/* End footer */}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Layout);","import React from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { withLocalize } from \"react-localize-redux\";\nimport enTranslations from \"./translations/global.en.json\";\nimport ruTranslations from \"./translations/global.ru.json\";\nimport Layout from './Layout';\n\nconst LANGUAGE_CODE = {\n    en: \"en\",\n    ru: \"ru\"\n};\n\nconst languages = [\n    { name: \"EN\", code: LANGUAGE_CODE.en },\n    { name: \"RU\", code: LANGUAGE_CODE.ru }\n];\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this._initTranslations();\n    }\n\n    _initTranslations = () => {\n        this.props.initialize({\n            languages,\n            options: {\n                renderToStaticMarkup,\n                renderInnerHtml: true,\n                defaultLanguage: LANGUAGE_CODE.en,\n                activeLanguage: LANGUAGE_CODE.en\n            }\n        });\n\n        this.props.addTranslationForLanguage(enTranslations, LANGUAGE_CODE.en);\n        this.props.addTranslationForLanguage(ruTranslations, LANGUAGE_CODE.ru);\n    }\n\n    render() {\n        return (\n            <Layout/>\n        );\n    }\n}\n\nexport default withLocalize(Main);\n","\nimport React from 'react';\nimport Main from './Main';\nimport './App.css';\n\nfunction App() {\n    return (\n        <Main />\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from \"react-dom\";\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\nimport { LocalizeProvider } from \"react-localize-redux\";\nimport App from './App';\nimport 'fontsource-roboto';\nimport './index.css';\n//import reportWebVitals from './reportWebVitals';\n\nconst store = createStore(rootReducer);\n\nrender(\n    <Provider store={store}>\n        <LocalizeProvider store={store}>\n            <App />\n        </LocalizeProvider>\n    </Provider>, \n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}