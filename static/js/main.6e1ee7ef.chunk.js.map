{"version":3,"sources":["actions/actionTypes.js","constants.js","utils.js","actions/statisticsActions.js","reducers/initialState.js","reducers/statisticsReducer.js","reducers/filtersReducer.js","reducers/rootReducer.js","containers/AllMeasures.js","containers/CurrentSituation.js","containers/Hospitalisations.js","containers/StatisticsByAge.js","components/AllMeasuresChart/ComposedChartTooltip.js","components/ChartTitle.js","components/AllMeasuresChart/AllMeasuresChart.js","components/CurrentSituationPanel/MeasureCard.js","components/CurrentSituationPanel/CurrentSituationPanel.js","components/HospitalisationsChart.js","components/BarChartTooltip.js","components/StatisticsByAgeChart.js","components/LanguageToggle.js","Layout.js","Main.js","App.js","index.js"],"names":["FETCH_COUNTRY_STATISTICS","SET_COUNTRY_WIDE_FILTER","FETCH_COUNTRY_TOTALS","FETCH_HOSPITALISATIONS","FETCH_STATISTICS_BY_AGE","PALETTE","NUMBER_OF_TESTS_MEASURE_ID","NUMBER_OF_POSITIVE_CASES_MEASURE_ID","NUMBER_OF_DEATHS_MEASURE_ID","MEASURE_LABEL_TRANSLATION_KEY_MAP","HOSPITALISATION_AREA_SHORT_LABEL_TRANSLATION_KEY_MAP","HOSPITALISATION_AREA_LABEL_TRANSLATION_KEY_MAP","formatDate","date","locale","format","moment","Date","formatNumber","number","toLocaleString","MEASURES","DAY_PROP_NAME","getCountryStatistics","key","dataToShow","JSONstat","allMeasuresDaily","Dataset","toTable","type","content","filter","item","value","includes","measure","map","labels","days","groupsByDate","reduce","result","resultData","Object","keys","forEach","arr","obj","val","push","getCountryTotals","totals","data","allMeasuresWeekly","x","population","numberOfTests","numberOfPositiveCases","numberOfDeaths","getTotalsFromWeeklyData","additionalStatistics","allTimeTotals","getStatisticsByAge","dataJson","measureId","age","ages","isLessThenFive","isTotal","fetchCountryStatistics","fetchCountryTotals","fetchHospitalisations","areas","hospitalisationsByArea","currentHospitalisationsByArea","fetchStatisticsByAge","allPositiveCasesByAge","allDeathsByAge","statistics","countryStatistics","items","loaded","countryTotals","hospitalisations","statisticsByAge","filters","countryWide","selectedMeasures","selectedRegionId","statisticsReducer","combineReducers","state","initialState","action","filtersReducer","countryWideFilter","rootReducer","localize","localizeReducer","mapStateToProps","translate","getTranslate","currentLanguage","getActiveLanguage","code","mapDispatchToProps","dispatch","statisticsActions","bindActionCreators","ComposedChartTooltip","_getFormattedDate","props","_getFormattedNumber","_renderMeasureLabel","translationKey","id","this","active","payload","label","separator","measureIds","length","point","colors","dataKey","stroke","className","style","color","React","Component","Title","Box","p","Typography","component","variant","align","gutterBottom","children","MEASURE_IDS","MEASURE_COLOR_MAP","DEFAULT_LINE_OPACITY","AllMeasuresChart","_formatXAxis","tickItem","_formatYAxis","_formatLegendItem","entry","_onLegendClick","e","_toggleMeasure","_onMeasureCheckBoxChange","event","target","name","visibleMeasures","setState","_onLegendMouseEnter","o","opacity","_onLegendMouseLeave","_renderFilters","pl","pr","Grid","container","direction","justify","alignItems","xs","sm","FormControlLabel","control","Checkbox","checked","onChange","Paper","width","height","margin","top","right","bottom","left","tickFormatter","formatter","onClick","onMouseOver","onMouseOut","strokeOpacity","hide","dot","fill","fillOpacity","connect","Container","MeasureCard","labelTranslationId","valueColor","tooltipTranslationId","Tooltip","title","placement","arrow","enterTouchDelay","fontSize","fontWeight","CurrentSituationPanel","_formatDate","day","numberOfRecovered","pt","pb","spacing","IN_PATIENT_CARE_MEASURE_ID","IN_INTENSIVE_CARE_MEASURE_ID","HospitalisationsChart","_formatTooltipLabel","_formatTooltipItem","_toggleMeasute","thlLink","Link","href","rel","values","strokeDasharray","cursor","labelFormatter","position","BarChartTooltip","translationsMap","actualValuesKeys","POSITIVE_CASES_MEASURE_ID","DEATHS_MEASURE_ID","MEASURE_ACTUAL_VALUES_MAP","StatisticsByAgeChart","casesLabel","deathsLabel","_onAllAgesCheckBoxChange","allAgesVisible","numberOfDeathsItem","find","isLessThenFiveDeaths","BootstrapInput","withStyles","theme","root","marginTop","input","borderRadius","backgroundColor","palette","background","paper","border","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","LanguageToggle","_onLanguageChange","setActiveLanguage","languages","classes","FormControl","formControl","Select","native","activeLanguage","lang","minWidth","withLocalize","footerItems","links","url","text","Footer","footer","Copyright","getFullYear","Layout","fixedHeightPaper","clsx","fixedHeight","Fragment","CssBaseline","AppBar","elevation","appBar","Toolbar","toolbar","noWrap","toolbarTitle","maxWidth","heroContent","thlLastUpdateLink","thlMapLink","panel","mt","ul","listStyle","white","borderBottom","divider","flexWrap","flexGrow","link","cardHeader","grey","cardPricing","display","justifyContent","marginBottom","borderTop","paddingTop","paddingBottom","breakpoints","up","LANGUAGE_CODE","Main","_initTranslations","initialize","options","renderToStaticMarkup","renderInnerHtml","defaultLanguage","addTranslationForLanguage","enTranslations","ruTranslations","App","store","createStore","render","document","getElementById"],"mappings":"wrqDACaA,EAA2B,2BAC3BC,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAAyB,yBACzBC,EAA0B,0B,sECC1BC,EACA,UADAA,EAEA,UAFAA,EAGA,UAHAA,EAIA,UAJAA,EAKA,UALAA,EAMA,UAGAC,EAA6B,SAC7BC,EAAsC,SACtCC,EAA8B,SAG9BC,GAAiC,mBACzCH,EAA6B,4BADY,cAEzCC,EAAsC,oCAFG,cAGzCC,EAA8B,6BAHW,GAajCE,GAAoD,mBAPtB,EAQR,yBAD8B,cANjB,EAQR,uBAFyB,cALnB,EAQR,qBAH2B,cAJrB,EAQR,mBAJ6B,cAHlB,EAQR,sBAL0B,cAFpB,EAQR,oBAN4B,GASpDC,GAA8C,mBAhBhB,EAiBR,8BADwB,cAfX,EAiBR,sCAFmB,cAdb,EAiBR,oCAHqB,cAbf,EAiBR,kCAJuB,cAZZ,EAiBR,qCALoB,cAXd,EAiBR,mCANsB,G,+BC3BpD,SAASC,EAAWC,EAAMC,EAAQC,GACrC,OAAOC,IAAO,IAAIC,KAAKJ,IAAOC,OAAOA,GAAQC,OAAOA,GAGjD,SAASG,EAAaC,EAAQL,GACjC,OAAOK,EAAOC,eAAeN,GCbjC,IAAMO,EAAW,CACbf,EACAC,EACAC,GAOEc,EAAgB,2BAOtB,SAASC,IACL,IDrB2BC,ECuBrBC,EAFIC,YAASC,GACJC,QAAQ,GAAGC,QAAQ,CAAEC,KAAO,SAAUC,QAAS,OAEzDC,QAAO,SAAAC,GAAI,OAAkB,MAAdA,EAAKC,OAAiBb,EAASc,SAASF,EAAKG,YAC5DC,KAAI,SAAAJ,GACD,IAAIpB,EAAOyB,EAAOC,KAAKN,EAAKX,IAC5B,MAAO,CACHc,QAASH,EAAKG,QACdF,OAAQD,EAAKC,MACbrB,KAAMA,MAGZ2B,GDjCqBhB,ECiCc,OAAZC,EDhChBgB,QACT,SAACC,EAAQT,GAAT,mBAAC,eACMS,GADP,kBAEKT,EAAKT,GAFV,sBAGYkB,EAAOT,EAAKT,KAAS,IAHjC,CAIQS,QAEJ,KC0BFU,EAAa,GAUnB,OATAC,OAAOC,KAAKL,GAAcM,SAAQ,SAAAtB,GAC9B,IAAMuB,EAAMP,EAAahB,GACrBwB,EAAM,CAACnC,KAAMW,GACjBuB,EAAID,SAAQ,SAAAG,GACRD,EAAIC,EAAIb,SAAWa,EAAIf,SAE3BS,EAAWO,KAAKF,MAGbL,EAuBX,SAASQ,IACL,IAAMC,EArBV,WACI,IACMC,EADI3B,YAAS4B,GACJ1B,QAAQ,GAClBC,QAAQ,CAAEC,KAAO,SAAUC,QAAS,OACpCC,QAAO,SAAAuB,GAAC,MAzCO,WAyCHA,EAAEjC,MAEf8B,EAAS,GAMb,OAJAC,EAAKP,SAAQ,SAAAS,GACTH,EAAOG,EAAEnB,UAAYmB,EAAErB,SAGpB,CACHsB,WAAYJ,EF9CiB,QE+CnCK,cAAeL,EAAO9C,QAChBoD,sBAAuBN,EAAO7C,GAC9BoD,eAAgBP,EAAO5C,IAKZoD,GACf,OAAO,2BACAC,EAAqBC,eACrBV,GAWX,SAASW,EAAmBC,GAiBxB,OAhBUtC,YAASsC,GACJpC,QAAQ,GAAGC,QAAQ,CAAEC,KAAO,SAAUC,QAAS,OAEzDM,KAAI,SAAAJ,GACD,IAAMgC,EAAYhC,EAAI,UAChBiC,EAAM5B,EAAO6B,KAAKlC,EAAI,WACtBmC,EAvEiB,OAuEAnC,EAAKC,MAC5B,MAAO,CACH+B,YACAC,MACAhC,MAAOkC,EAAiB,GAAKnC,EAAKC,MAClCkC,eAAgBA,EAChBC,QApFY,WAoFHJ,MAOlB,SAASK,KACZ,MAAO,CAAExC,KAAM9B,EAA0BqD,KAAM9B,KAG5C,SAASgD,KACZ,MAAO,CAAEzC,KAAM5B,EAAsBmD,KAAMF,KAGxC,SAASqB,KACZ,MAAO,CAAE1C,KAAM3B,EAAwBkD,KAnChC,CACHoB,MAAOZ,EAAqBY,MAC5BC,uBAAwBb,EAAqBc,gCAoC9C,SAASC,KACZ,MAAO,CACH9C,KAAM1B,EACNiD,KAAM,CACFK,sBAAuBK,EAAmBc,GAC1ClB,eAAgBI,EAAmBe,KCzHhC,QACXC,WAAY,CACRC,kBAAmB,CACfC,MAAO,GACPC,QAAQ,GAEZC,cAAe,CACX9B,KAAM,GACN6B,QAAQ,GAEZE,iBAAkB,CACd/B,KAAM,GACN6B,QAAQ,GAEZG,gBAAiB,CACbhC,KAAM,GACN6B,QAAQ,IAGhBI,QAAS,CACLC,YAAa,CACTC,iBAAkB,CACdlF,EACAC,EACAC,GAEJiF,iBAAkB,QCwB9B,IAOeC,GAPWC,YAAgB,CACtCX,kBAjDJ,WAAuF,IAA5DY,EAA2D,uDAAnDC,GAAad,WAAWC,kBAAmBc,EAAQ,uCAClF,OAAQA,EAAOhE,MACX,KAAK9B,EACD,MAAO,CACHiF,MAAM,YAAKa,EAAOzC,MAClB6B,QAAQ,GAEhB,QACI,OAAOU,IA0CfT,cAtCJ,WAA+E,IAAxDS,EAAuD,uDAA/CC,GAAad,WAAWI,cAAeW,EAAQ,uCAC1E,OAAQA,EAAOhE,MACX,KAAK5B,EACD,MAAO,CACHmD,KAAK,eAAKyC,EAAOzC,MACjB6B,QAAQ,GAEhB,QACI,OAAOU,IA+BfR,iBA3BJ,WAAqF,IAA3DQ,EAA0D,uDAAlDC,GAAad,WAAWK,iBAAkBU,EAAQ,uCAChF,OAAQA,EAAOhE,MACX,KAAK3B,EACD,MAAO,CACHkD,KAAK,eAAKyC,EAAOzC,MACjB6B,QAAQ,GAEhB,QACI,OAAOU,IAoBfP,gBAhBJ,WAAmF,IAA1DO,EAAyD,uDAAjDC,GAAad,WAAWM,gBAAiBS,EAAQ,uCAC9E,OAAQA,EAAOhE,MACX,KAAK1B,EACD,MAAO,CACHiD,KAAK,eAAKyC,EAAOzC,MACjB6B,QAAQ,GAEhB,QACI,OAAOU,MChCJG,OAZf,WAA+D,IAAvCH,EAAsC,uDAA9BC,GAAaP,QAASQ,EAAQ,uCAC1D,OAAQA,EAAOhE,MACf,KAAK7B,EACD,OAAO,2BACA2F,GADP,IAEIL,YAAaO,EAAOE,oBAE5B,QACI,OAAOJ,ICDAK,GANKN,YAAgB,CAChCO,SAAUC,IACVpB,WAAYW,GACZJ,QAASS,K,gMCJAK,GAAkB,SAAAR,GAC3B,MAAO,CACHS,UAAWC,YAAaV,EAAMM,UAC9BK,gBAAiBC,YAAkBZ,EAAMM,UAAUO,KACnDzB,kBAAmBY,EAAMb,WAAWC,oBAI/B0B,GAAqB,SAACC,GAC/B,MAAO,CACHC,kBAAmBC,YAAmBD,EAAmBD,KCVpDP,GAAkB,SAAAR,GAC3B,MAAO,CACHS,UAAWC,YAAaV,EAAMM,UAC9BK,gBAAiBC,YAAkBZ,EAAMM,UAAUO,KACnDtB,cAAeS,EAAMb,WAAWI,gBAI3BuB,GAAqB,SAACC,GAC/B,MAAO,CACHC,kBAAmBC,YAAmBD,EAAmBD,KCVpDP,GAAkB,SAAAR,GAC3B,MAAO,CACHS,UAAWC,YAAaV,EAAMM,UAC9BK,gBAAiBC,YAAkBZ,EAAMM,UAAUO,KACnDrB,iBAAkBQ,EAAMb,WAAWK,mBAI9BsB,GAAqB,SAACC,GAC/B,MAAO,CACHC,kBAAmBC,YAAmBD,EAAmBD,KCVpDP,GAAkB,SAAAR,GAC3B,MAAO,CACHS,UAAWC,YAAaV,EAAMM,UAC9BK,gBAAiBC,YAAkBZ,EAAMM,UAAUO,KACnDpB,gBAAiBO,EAAMb,WAAWM,kBAI7BqB,GAAqB,SAACC,GAC/B,MAAO,CACHC,kBAAmBC,YAAmBD,EAAmBD,KCkDlDG,I,sNAxDXC,kBAAoB,SAAClG,GACjB,OAAOD,EAAWC,EAAM,EAAKmG,MAAMT,gBAAiB,iB,EAGxDU,oBAAsB,SAAC/E,GACnB,OAAOA,EAAQA,EAAMd,eAAe,EAAK4F,MAAMT,iBAAmBrE,G,EAGtEgF,oBAAsB,SAACjD,GACnB,IAAMkD,EAAiB1G,EAAkCwD,GACzD,OAAO,cAAC,IAAD,CAAWmD,GAAID,K,wDAGhB,IAAD,SACqDE,KAAKL,MAAvDM,EADH,EACGA,OAAQC,EADX,EACWA,QAASC,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,UAAWC,EADtC,EACsCA,WAE3C,IAAIJ,IAAWC,EAAQI,OACnB,OAAO,KAGX,IAAMC,EAAQL,EAAQ,GAAGA,QACnBM,EAAS,GAMf,OAJAN,EAAQzE,SAAQ,SAAAS,GACZsE,EAAOtE,EAAEuE,SAAWvE,EAAEwE,UAItB,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAf,SACKX,KAAKN,kBAAkBS,KAGxBE,EAAWrF,KAAI,SAAA+E,GAAE,OACb,sBAAcY,UAAU,UAAUC,MAAOJ,EAAOT,GAAM,CAACc,MAAOL,EAAOT,IAAQ,KAA7E,UACK,EAAKF,oBAAoBE,GACzBK,EACA,EAAKR,oBAAoBW,EAAMR,MAH1BA,a,GAnCCe,IAAMC,Y,UCF1B,SAASC,GAAMrB,GAC1B,OACI,cAACsB,GAAA,EAAD,CAAKC,EAAG,EAAR,SACI,cAACC,GAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKR,MAAM,cAAcS,MAAM,SAASC,cAAY,EAAvF,SACK5B,EAAM6B,a,uBCgBjBC,GAAc,CAACxI,EAA4BC,EAAqCC,GAEhFuI,IAAiB,qBAClBzI,EAA6BD,GADX,eAElBE,EAAsCF,GAFpB,eAGlBG,EAA8BH,GAHZ,IAMjB2I,GAAuB,GAEvBC,G,oDACF,WAAYjC,GAAQ,IAAD,iCACf,cAAMA,IAqBVkC,aAAe,SAACC,GACZ,OAAOvI,EAAWuI,EAAU,EAAKnC,MAAMT,gBAAiB,WAvBzC,EA0BnB6C,aAAe,SAACD,GACZ,OAAOjI,EAAaiI,EAAU,EAAKnC,MAAMT,kBA3B1B,EA8BnB8C,kBAAoB,SAACnH,EAAOoH,GACxB,IAAMnC,EAAiB1G,EAAkCyB,GACzD,OAAO,cAAC,IAAD,CAAWkF,GAAID,KAhCP,EAmCnBoC,eAAiB,SAACC,GACd,IAAMvF,EAAYuF,EAAE1B,QACpB,EAAK2B,eAAexF,IArCL,EAwCnByF,yBAA2B,SAACC,GACxB,IAAM1F,EAAY0F,EAAMC,OAAOC,KAC/B,EAAKJ,eAAexF,IA1CL,EA6CnBwF,eAAiB,SAACxF,GACd,IAAM6F,EAAkB,EAAKlE,MAAMkE,gBAEnC,EAAKC,SAAS,CACVD,gBAAiBA,EAAgB3H,SAAS8B,GACtC6F,EAAgB9H,QAAO,SAAAuB,GAAC,OAAIA,IAAMU,KADrB,sBAET6F,GAFS,CAEQ7F,OAnDd,EAuDnB+F,oBAAsB,SAACC,GAAO,IAClBnC,EAAYmC,EAAZnC,QACAoC,EAAY,EAAKtE,MAAjBsE,QAET,EAAKH,SAAS,CACZG,QAAQ,2BAAMA,GAAP,kBAAiBpC,EAAU,OA5DpB,EAgEnBqC,oBAAsB,SAACF,GAAO,IAClBnC,EAAYmC,EAAZnC,QACAoC,EAAY,EAAKtE,MAAjBsE,QAET,EAAKH,SAAS,CACZG,QAAQ,2BACEA,GADH,kBAECpC,EAAUkB,QAvEJ,EA4EnBoB,eAAiB,WAAO,IACZN,EAAoB,EAAKlE,MAAzBkE,gBAER,OACI,cAACxB,GAAA,EAAD,CAAK+B,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,WAA5D,SACK7B,GAAYzG,KAAI,SAAA+E,GAAE,OACf,cAACmD,GAAA,EAAD,CAAetI,MAAI,EAAC2I,GAAI,EAAGC,GAAI,EAA/B,SACI,cAACC,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CACInB,KAAMzC,EACN6D,QAASnB,EAAgB3H,SAASiF,GAClC8D,SAAU,EAAKxB,yBACfzB,MAAQ,CACJC,MAAOa,GAAkB3B,MAIrCI,MACI,cAACgB,GAAA,EAAD,CAAYE,QAAQ,QAAQT,MAAO,CAAEC,MAAOa,GAAkB3B,IAA9D,SACI,cAAC,IAAD,CAAWA,GAAI3G,EAAkC2G,UAdtDA,WAjF3B,EAAKxB,MAAQ,CACTsE,SAAO,mBACF5J,EAA6B0I,IAD3B,cAEFzI,EAAsCyI,IAFpC,cAGFxI,EAA8BwI,IAH5B,GAKPc,gBAAiB,CACbxJ,EACAC,EACAC,IAXO,E,iEAiBX6G,KAAKL,MAAMhC,kBAAkBE,QAC7BmC,KAAKL,MAAMJ,kBAAkBtC,2B,+BA0F3B,IAAD,EACoC+C,KAAKL,MAAtCgB,EADH,EACGA,UAAWhD,EADd,EACcA,kBADd,EAEgCqC,KAAKzB,MAAlCkE,EAFH,EAEGA,gBAAiBI,EAFpB,EAEoBA,QAEzB,OAAIlF,EAAkBE,OASlB,eAACiG,GAAA,EAAD,CAAOnD,UAAWA,EAAlB,UACI,cAAC,GAAD,UACI,cAAC,IAAD,CAAWZ,GAAG,uCAEjBC,KAAK+C,iBACN,qBAAKnC,MAAO,CAAEmD,MAAO,OAAQC,OAAQ,SAArC,SACI,cAAC,KAAD,UACI,eAAC,KAAD,CACIhI,KAAM2B,EAAkBC,MACxBqG,OAAQ,CACJC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAH9C,UAMI,cAAC,KAAD,CAAe3D,OAAO,YACtB,cAAC,KAAD,CAAOD,QAAQ,OAAO6D,cAAetE,KAAK6B,eAC1C,cAAC,KAAD,CAAOyC,cAAetE,KAAK+B,eAC3B,cAAC,KAAD,CAASrH,QACL,cAAC,GAAD,CACIsE,UAAWgB,KAAKL,MAAMX,UACtBE,gBAAiBc,KAAKL,MAAMT,gBAC5BmB,WAAYoB,OAGpB,cAAC,KAAD,CACI8C,UAAWvE,KAAKgC,kBAChBwC,QAASxE,KAAKkC,eACduC,YAAazE,KAAK2C,oBAClB+B,WAAY1E,KAAK8C,sBAErB,cAAC,KAAD,CACIrI,KAAK,WACLkK,cAAe9B,EAAQ5J,QACvBwH,QAASxH,EACTyH,OAAQgB,GAAkBzI,QAC1B2L,MAAOnC,EAAgB3H,SAAS7B,GAChC4L,KAAK,IAGL,CAAC3L,EAAqCC,GAA6B6B,KAAI,SAAA+E,GAAE,OACrE,cAAC,KAAD,CAEItF,KAAK,WACLgG,QAASV,EACT6E,MAAOnC,EAAgB3H,SAASiF,GAChC+E,KAAMpD,GAAkB3B,GACxBW,OAAQgB,GAAkB3B,GAC1BgF,YAAalC,EAAQ9C,IANhBA,gBA/C7B,cAAC+D,GAAA,EAAD,CAAOnD,UAAWA,EAAlB,SACI,cAAC,IAAD,CAAWZ,GAAI,kB,GApHJe,IAAMC,WA6LtBiE,eAAQC,EAAUlG,gBAAiBkG,EAAU5F,mBAA7C2F,CAAiEpD,I,+BC/KjEsD,G,2KArCD,IAAD,EACmElF,KAAKL,MAArEwF,EADH,EACGA,mBAAoBtK,EADvB,EACuBA,MAAOuK,EAD9B,EAC8BA,WAAYC,EAD1C,EAC0CA,qBAE/C,OACI,cAACnC,GAAA,EAAD,CAAMtI,MAAI,EAAC2I,GAAI,EAAf,SACI,cAACO,GAAA,EAAD,UACI,eAAC7C,GAAA,EAAD,CAAKC,EAAG,EAAR,UACI,eAACC,GAAA,EAAD,CAAYN,MAAM,cAAcU,cAAY,EAA5C,UACI,cAAC,IAAD,CAAWxB,GAAIoF,IADnB,OAIQE,EACI,cAACC,GAAA,EAAD,CAASC,MAAO,cAAC,IAAD,CAAWxF,GAAIsF,IAA0BG,UAAU,MAAMC,OAAK,EAACC,gBAAiB,IAAhG,SACI,cAAC,KAAD,CAAU9E,MAAO,CAAE+E,SAAU,GAAI9C,QAAS,QAE9C,QAGZ,cAAC1B,GAAA,EAAD,CAAYE,QAAQ,KAAKD,UAAU,KAAKR,MAAO,CAAEC,MAAOuE,EAAYQ,WAAY,KAAhF,SACK/L,EAAagB,EAAOmF,KAAKL,MAAMT,8B,GApBlC4B,IAAMC,WCC1B8E,G,+MAOFC,YAAc,SAACtM,GACX,OAAOD,EAAWC,EAAM,EAAKmG,MAAMT,gBAAiB,iB,mEANhDc,KAAKL,MAAM7B,cAAcD,QACzBmC,KAAKL,MAAMJ,kBAAkBrC,uB,+BAQ3B,IAAD,EACgC8C,KAAKL,MAAlC7B,EADH,EACGA,cAAe6C,EADlB,EACkBA,UAEvB,IAAI7C,EAAcD,OACd,OACI,cAACiG,GAAA,EAAD,CAAOnD,UAAWA,EAAlB,SACI,cAAC,IAAD,CAAWZ,GAAI,cANtB,MAWgGjC,EAAc9B,KAA3G+J,EAXH,EAWGA,IAAK5J,EAXR,EAWQA,WAAYC,EAXpB,EAWoBA,cAAeC,EAXnC,EAWmCA,sBAAuB2J,EAX1D,EAW0DA,kBAAmB1J,EAX7E,EAW6EA,eAElF,OACI,eAACwH,GAAA,EAAD,CAAOnD,UAAWA,EAAlB,UACI,cAAC,GAAD,UACI,cAAC,IAAD,CAAWZ,GAAG,mCAAmC/D,KAAM,CAAExC,KAAMwG,KAAK8F,YAAYC,QAEpF,cAAC9E,GAAA,EAAD,CAAKgF,GAAI,EAAGhD,GAAI,EAAGiD,GAAI,EAAGlD,GAAI,EAA9B,SACI,eAACE,GAAA,EAAD,CAAMC,WAAS,EAACgD,QAAS,EAAG/C,UAAU,MAAMC,QAAQ,aAAaC,WAAW,aAA5E,UACI,cAAC,GAAD,CAAqB6B,mBAAmB,wBAAwBtK,MAAOsB,EAAYiJ,WAAY,WAA9E,KACjB,cAAC,GAAD,CAAqBD,mBAAmB,gCAAgCtK,MAAOuB,EAAegJ,WAAY,WAAzF,KACjB,cAAC,GAAD,CAAqBD,mBAAmB,wCAAwCtK,MAAOwB,EAAuB+I,WAAY,WAAzG,KACjB,cAAC,GAAD,CAAqBD,mBAAmB,oCAAoCtK,MAAOmL,EAAmBZ,WAAY,UAAWC,qBAAqB,yCAAjI,KACjB,cAAC,GAAD,CAAqBF,mBAAmB,iCAAiCtK,MAAOyB,EAAgB8I,WAAY,WAA3F,iB,GAnCLtE,IAAMC,WAmD3BiE,eAAQC,EAAUlG,gBAAiBkG,EAAU5F,mBAA7C2F,CAAiEa,IC1C1EO,GAA6B,gBAC7BC,GAA+B,kBAE/BC,G,oDACF,WAAY3G,GAAQ,IAAD,iCACf,cAAMA,IAmBVmG,YAAc,SAACtM,GACX,OAAOD,EAAWC,EAAM,EAAKmG,MAAMT,gBAAiB,iBArBrC,EAwBnB2C,aAAe,SAACC,GACZ,IAAMhC,EAAiBzG,EAAqDyI,GAC5E,OAAO,EAAKnC,MAAMX,UAAUc,IA1Bb,EA6BnBiC,aAAe,SAACD,GACZ,OAAOjI,EAAaiI,EAAU,EAAKnC,MAAMT,kBA9B1B,EAiCnB8C,kBAAoB,SAACnH,EAAOoH,GACxB,IAAMnC,EAAc,qBAAiBjF,GACrC,OAAO,cAAC,IAAD,CAAWkF,GAAID,KAnCP,EAsCnByG,oBAAsB,SAAC1L,EAAOoH,GAC1B,IAAMnC,EAAiBxG,EAA+CuB,GACtE,OAAO,EAAK8E,MAAMX,UAAUc,IAxCb,EA2CnB0G,mBAAqB,SAAC3L,EAAO2H,EAAM7C,GAC/B,IAAMG,EAAc,qBAAiB0C,GACrC,MAAO,CACH3I,EAAagB,EAAO,EAAK8E,MAAMT,iBAC/B,EAAKS,MAAMX,UAAUc,KA/CV,EAmDnB2G,eAAiB,SAACtE,GACd,IAAMvF,EAAYuF,EAAE1B,QACdgC,EAAkB,EAAKlE,MAAMkE,gBAEnC,EAAKC,SAAS,CACVD,gBAAiBA,EAAgB3H,SAAS8B,GACtC6F,EAAgB9H,QAAO,SAAAuB,GAAC,OAAIA,IAAMU,KADrB,sBAET6F,GAFS,CAEQ7F,OA1Dd,EA8DnB+F,oBAAsB,SAACC,GAAO,IAClBnC,EAAYmC,EAAZnC,QACAoC,EAAY,EAAKtE,MAAjBsE,QAET,EAAKH,SAAS,CACZG,QAAQ,2BAAMA,GAAP,kBAAiBpC,EAAU,OAnEpB,EAuEnBqC,oBAAsB,SAACF,GAAO,IAClBnC,EAAYmC,EAAZnC,QACAoC,EAAY,EAAKtE,MAAjBsE,QAET,EAAKH,SAAS,CACZG,QAAQ,2BACEA,GADH,kBAECpC,EAnFW,QAOpB,EAAKlC,MAAQ,CACTsE,SAAO,mBACFuD,GATW,IAQT,cAEFC,GAVW,IAQT,GAIP5D,gBAAiB,CACb2D,GACAC,KATO,E,iEAeXrG,KAAKL,MAAM5B,iBAAiBF,QAC5BmC,KAAKL,MAAMJ,kBAAkBpC,0B,+BAmE3B,IAAD,EACmC6C,KAAKL,MAArC5B,EADH,EACGA,iBAAkB4C,EADrB,EACqBA,UAE1B,IAAI5C,EAAiBF,OACjB,OACI,cAACiG,GAAA,EAAD,CAAOnD,UAAWA,EAAlB,SACI,cAAC,IAAD,CAAWZ,GAAI,cANtB,MAWgCC,KAAKzB,MAAlCsE,EAXH,EAWGA,QAASJ,EAXZ,EAWYA,gBACTpF,EAA2BU,EAAiB/B,KAA5CqB,uBACF0I,EAAM1I,EAAuB0I,IAEnC,OACI,eAACjC,GAAA,EAAD,CAAOnD,UAAWA,EAAlB,UACI,eAAC,GAAD,WACI,cAAC,IAAD,CAAWZ,GAAG,uCAAuC/D,KAAM,CAAExC,KAAMwG,KAAK8F,YAAYC,MACpF,cAAC9E,GAAA,EAAD,CAAKgF,GAAI,EAAT,SACI,cAAC9E,GAAA,EAAD,CAAYG,MAAM,SAAST,MAAM,gBAAgBO,UAAU,IAA3D,SACI,cAAC,IAAD,CAAWrB,GAAG,+BACV/D,KAAM,CACF0K,QAAS,cAACC,GAAA,EAAD,CAAMC,KAAK,4IAA4IrE,OAAO,SAASsE,IAAI,aAA3K,SAAwL,cAAC,IAAD,CAAW9G,GAAG,4BAMnO,qBAAKa,MAAO,CAAEmD,MAAO,OAAQC,OAAQ,SAArC,SACI,cAAC,KAAD,UACI,eAAC,KAAD,CACIhI,KAAMqB,EAAuByJ,OAC7B7C,OAAQ,CACJC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAH9C,UAMI,cAAC,KAAD,CAAe0C,gBAAgB,QAC/B,cAAC,KAAD,CAAOtG,QAAQ,SAAS6D,cAAetE,KAAK6B,eAC5C,cAAC,KAAD,CAAOyC,cAAetE,KAAK+B,eAC3B,cAAC,KAAD,CACIiF,OAAQ,CAAElC,KAAM9L,EAAiB+L,YAAa,IAC9CkC,eAAgBjH,KAAKuG,oBACrBhC,UAAWvE,KAAKwG,qBACpB,cAAC,KAAD,CACIjC,UAAWvE,KAAKgC,kBAChBwC,QAASxE,KAAKyG,eACdhC,YAAazE,KAAK2C,oBAClB+B,WAAY1E,KAAK8C,sBAErB,cAAC,KAAD,CACIrC,QAAS2F,GACT1F,OAAQ1H,EACR8L,KAAM9L,EACN+L,YAAalC,EAAO,cACpB+B,MAAOnC,EAAgB3H,SAASsL,IALpC,SAOI,cAAC,KAAD,CAAW3F,QAAS2F,GAA4Bc,SAAS,UAE7D,cAAC,KAAD,CACIzG,QAAS4F,GACT3F,OAAQ1H,EACR8L,KAAM9L,EACN+L,YAAalC,EAAO,gBACpB+B,MAAOnC,EAAgB3H,SAASuL,IALpC,SAOI,cAAC,KAAD,CAAW5F,QAAS4F,GAA8Ba,SAAS,wB,GAtJvDpG,IAAMC,WAwK3BiE,eAAQC,EAAUlG,gBAAiBkG,EAAU5F,mBAA7C2F,CAAiEsB,IC/HjEa,G,+MA3DXvH,oBAAsB,SAAC/E,GACnB,OAAOA,EAAQA,EAAMd,eAAe,EAAK4F,MAAMT,iBAAmBrE,G,EAGtEgF,oBAAsB,SAACjD,GAAe,IAE5BkD,EADoB,EAAKH,MAAxByH,gBACgCxK,GACvC,OAAO,cAAC,IAAD,CAAWmD,GAAID,K,wDAGhB,IAAD,SACuEE,KAAKL,MAAzEM,EADH,EACGA,OAAQC,EADX,EACWA,QAASC,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,UAAWC,EADtC,EACsCA,WAAYgH,EADlD,EACkDA,iBAEvD,IAAIpH,IAAWC,EAAQI,OACnB,OAAO,KAGX,IAAMC,EAAQL,EAAQ,GAAGA,QACnBM,EAAS,GAMf,OAJAN,EAAQzE,SAAQ,SAAAS,GACZsE,EAAOtE,EAAEuE,SAAWvE,EAAEwE,UAItB,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAf,SACKR,IAGDE,EAAWrF,KAAI,SAAA+E,GAAE,OACb,sBAAcY,UAAU,UAAUC,MAAOJ,EAAOT,GAAM,CAACc,MAAOL,EAAOT,IAAQ,KAA7E,UACK,EAAKF,oBAAoBE,GACzBK,EAEGiH,EACI9G,EAAM8G,EAAiBtH,IACvB,EAAKH,oBAAoBW,EAAMR,MANjCA,a,GAhCJe,IAAMC,WCgB9BuG,GAA4B,wBAC5BC,GAAoB,iBAEpBC,IAAyB,qBAC1BF,GAA4B,cADF,eAE1BC,GAAoB,eAFM,IAKzBnO,IAAiC,qBAClCkO,GAA4B,oCADM,eAElCC,GAAoB,6BAFc,IAKjC7F,IAAiB,qBAClB4F,GAA4BtO,GADV,eAElBuO,GAAoBvO,GAFF,IAKjByO,G,oDACF,WAAY9H,GAAQ,IAAD,iCACf,cAAMA,IAoBVkC,aAAe,SAACC,EAAUjH,GACtB,OAAOiH,GAtBQ,EAyBnBC,aAAe,SAACD,GACZ,OAAOjI,EAAaiI,EAAU,EAAKnC,MAAMT,kBA1B1B,EA6BnBsH,mBAAqB,SAAC3L,EAAO2H,EAAM7C,GAAW,IAAD,EACPA,EAAMO,QAAjCwH,EADkC,EAClCA,WAAYC,EADsB,EACtBA,YAGb7H,EAAiB1G,GAAkCoJ,GAGzD,MAAO,CALWA,IAAS8E,GAA4BI,EAAaC,EAGtD,EAAKhI,MAAMX,UAAUc,KAlCpB,EA0CnBoC,eAAiB,SAACC,GACd,IAAMvF,EAAYuF,EAAE1B,QACpB,EAAK2B,eAAexF,IA5CL,EA+CnByF,yBAA2B,SAACC,GACxB,IAAM1F,EAAY0F,EAAMC,OAAOC,KAC/B,EAAKJ,eAAexF,IAjDL,EAoDnBwF,eAAiB,SAACxF,GACd,IAAM6F,EAAkB,EAAKlE,MAAMkE,gBAEnC,EAAKC,SAAS,CACVD,gBAAiBA,EAAgB3H,SAAS8B,GACtC6F,EAAgB9H,QAAO,SAAAuB,GAAC,OAAIA,IAAMU,KADrB,sBAET6F,GAFS,CAEQ7F,OA1Dd,EA8DnBoF,kBAAoB,SAACnH,EAAOoH,GACxB,IAAMnC,EAAiB1G,GAAkCyB,GACzD,OAAO,cAAC,IAAD,CAAWkF,GAAID,KAhEP,EAmEnB6C,oBAAsB,SAACC,GAAO,IAClBnC,EAAYmC,EAAZnC,QACAoC,EAAY,EAAKtE,MAAjBsE,QAET,EAAKH,SAAS,CACZG,QAAQ,2BAAMA,GAAP,kBAAiBpC,EAAU,OAxEpB,EA4EnBqC,oBAAsB,SAACF,GAAO,IAClBnC,EAAYmC,EAAZnC,QACAoC,EAAY,EAAKtE,MAAjBsE,QAET,EAAKH,SAAS,CACZG,QAAQ,2BACEA,GADH,kBAECpC,EAvGW,QAoBL,EAwFnBmH,yBAA2B,SAACtF,GACxB,EAAKI,SAAS,CACbmF,eAAgBvF,EAAMC,OAAOqB,WA1Ff,EA8FnBb,eAAiB,WAAO,IAAD,EACyB,EAAKxE,MAAzCkE,EADW,EACXA,gBAAiBoF,EADN,EACMA,eAEzB,OACI,cAAC5G,GAAA,EAAD,CAAK+B,GAAI,EAAGC,GAAI,EAAhB,SACI,eAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,WAA5D,UACK,CAACgE,GAA2BC,IAAmBvM,KAAI,SAAA+E,GAAE,OAClD,cAACmD,GAAA,EAAD,CAAetI,MAAI,EAAC2I,GAAI,EAAGC,GAAI,EAA/B,SACI,cAACC,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CACInB,KAAMzC,EACN6D,QAASnB,EAAgB3H,SAASiF,GAClC8D,SAAU,EAAKxB,yBACfzB,MAAQ,CACJC,MAAOa,GAAkB3B,MAIrCI,MACI,cAACgB,GAAA,EAAD,CAAYE,QAAQ,QAAQT,MAAO,CAAEC,MAAOa,GAAkB3B,IAA9D,SACI,cAAC,IAAD,CAAWA,GAAI3G,GAAkC2G,UAdtDA,MAoBf,cAACmD,GAAA,EAAD,CAA0BtI,MAAI,EAAC2I,GAAI,EAAGC,GAAI,EAA1C,SACI,cAACC,GAAA,EAAD,CACIC,QACI,cAACC,GAAA,EAAD,CACInB,KAAM,cACN5B,MAAQ,CACJC,MAAO7H,GAEX4K,QAASiE,EACThE,SAAU,EAAK+D,2BAGvBzH,MACI,cAACgB,GAAA,EAAD,CAAYE,QAAQ,QAApB,SACI,cAAC,IAAD,CAAWtB,GAAI,gCAdpB,qBAvHvB,EAAKxB,MAAQ,CACTsE,SAAO,mBACFyE,GAxBW,IAuBT,cAEFC,GAzBW,IAuBT,GAIP9E,gBAAiB,CACb6E,GACAC,IAEJM,gBAAgB,GAXL,E,iEAgBX7H,KAAKL,MAAM3B,gBAAgBH,QAC3BmC,KAAKL,MAAMJ,kBAAkBhC,yB,+BAgI3B,IAAD,SACkCyC,KAAKL,MAApC3B,EADH,EACGA,gBAAiB2C,EADpB,EACoBA,UAEzB,IAAI3C,EAAgBH,OAChB,OACI,cAACiG,GAAA,EAAD,CAAOnD,UAAWA,EAAlB,SACI,cAAC,IAAD,CAAWZ,GAAI,cANtB,MAWgDC,KAAKzB,MAAlDsE,EAXH,EAWGA,QAASJ,EAXZ,EAWYA,gBAAiBoF,EAX7B,EAW6BA,eAX7B,EAY6C7J,EAAgBhC,KAA1DK,EAZH,EAYGA,sBAAuBC,EAZ1B,EAY0BA,eAEzBN,EAAOK,EACRrB,KAAI,SAAAJ,GAAS,IAAD,EACFgC,EAAkChC,EAAlCgC,UAAWI,EAAuBpC,EAAvBoC,QAASH,EAAcjC,EAAdiC,IAAKhC,EAASD,EAATC,MAC1BiN,EAAqBxL,EAAeyL,MAAK,SAAA7L,GAAC,OAAIA,EAAEU,YAAcA,KAC9DoL,EAAuBF,EAAmB/K,eAEhD,OAAO,EAAP,CACIH,YACAI,UACAH,IAAKG,EAAU,EAAK2C,MAAMX,UAAU,sBAAwBnC,GAHhE,cAIKyK,GAA4BzM,GAJjC,cAKK0M,GAAoBO,EAAmBjN,OAL5C,qCAM0BiN,EAAmB/K,gBAN7C,cAOKyK,GAA0BF,IAA6BzN,EAAagB,EAAO,EAAK8E,MAAMT,kBAP3F,cAQKsI,GAA0BD,IAAqBS,EAAuB,MAAQnO,EAAaiO,EAAmBjN,MAAO,EAAK8E,MAAMT,kBARrI,KAWHvE,QAAO,SAAAC,GAAI,QAAIiN,IAAyBjN,EAAKoC,WAElD,OACI,eAAC8G,GAAA,EAAD,CAAOnD,UAAWA,EAAlB,UACI,eAAC,GAAD,WACI,cAAC,IAAD,CAAWZ,GAAG,+BACd,cAACkB,GAAA,EAAD,CAAKgF,GAAI,EAAT,SACI,cAAC9E,GAAA,EAAD,CAAYG,MAAM,SAAST,MAAM,gBAAgBO,UAAU,IAA3D,SACI,cAAC,IAAD,CAAWrB,GAAG,uCAIzBC,KAAK+C,iBACN,qBAAKnC,MAAO,CAAEmD,MAAO,OAAQC,OAAQ,SAArC,SACI,cAAC,KAAD,UACI,eAAC,KAAD,CACIhI,KAAMA,EACNiI,OAAQ,CACJC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAH9C,UAMI,cAAC,KAAD,CAAe0C,gBAAgB,QAC/B,cAAC,KAAD,CAAOtG,QAAQ,MAAM6D,cAAetE,KAAK6B,eACzC,cAAC,KAAD,CAAOyC,cAAetE,KAAK+B,eAC3B,cAAC,KAAD,CAASrH,QACL,cAAC,GAAD,CACIsE,UAAWgB,KAAKL,MAAMX,UACtBE,gBAAiBc,KAAKL,MAAMT,gBAC5BmB,WAAY,CAACiH,GAA2BC,IACxCH,gBAAiBhO,GACjBiO,iBAAkBG,KAEtBR,OAAQ,CAAElC,KAAM9L,EAAiB+L,YAAa,MAElD,cAAC,KAAD,CACIR,UAAWvE,KAAKgC,kBAChBwC,QAASxE,KAAKkC,eACduC,YAAazE,KAAK2C,oBAClB+B,WAAY1E,KAAK8C,sBAErB,cAAC,KAAD,CACIrC,QAAS6G,GACT5G,OAAQgB,GAAkB4F,IAC1BxC,KAAMpD,GAAkB4F,IACxBvC,YAAalC,EAAQyE,IACrB1C,MAAOnC,EAAgB3H,SAASwM,IALpC,SAOI,cAAC,KAAD,CAAW7G,QAAS+G,GAA0BF,IAA4BJ,SAAS,UAEvF,cAAC,KAAD,CACIzG,QAAS8G,GACT7G,OAAQgB,GAAkB6F,IAC1BzC,KAAMpD,GAAkB6F,IACxBxC,YAAalC,EAAQ0E,IACrB3C,MAAOnC,EAAgB3H,SAASyM,IALpC,SAOI,cAAC,KAAD,CAAW9G,QAAS+G,GAA0BD,IAAoBL,SAAS,wB,GAzOxEpG,IAAMC,WA2P1BiE,eAAQC,EAAUlG,gBAAiBkG,EAAU5F,mBAA7C2F,CAAiEyC,I,8BC1R1EQ,GAAiBC,cAAW,SAACC,GAAD,MAAY,CAC5CC,KAAM,CACJ,YAAa,CACXC,UAAWF,EAAMhC,QAAQ,KAG7BmC,MAAO,CACLC,aAAc,EACdrB,SAAU,WACVsB,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CC,OAAQ,oBACRjD,SAAU,GACVkD,QAAS,sBACTC,WAAYX,EAAMY,YAAYC,OAAO,CAAC,eAAgB,eAEtDC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACP,UAAW,CACTX,aAAc,EACdY,YAAa,UACbC,UAAW,wCA9BMlB,CAiCnBmB,MAQEC,G,+MACFC,kBAAoB,SAACjH,GACjB,IAAM7I,EAAS6I,EAAMC,OAAO1H,MAC5B,EAAK8E,MAAM6J,kBAAkB/P,I,wDAI7B,IAAIuG,KAAKL,MAAM8J,UAAUnJ,OACrB,OAAO,KAFN,IAKGoJ,EAAY1J,KAAKL,MAAjB+J,QAER,OACI,cAACC,GAAA,EAAD,CAAatI,QAAQ,WAAWV,UAAW+I,EAAQE,YAAnD,SACI,cAACC,GAAA,EAAD,CACIC,QAAM,EACNjP,MAAOmF,KAAKL,MAAMoK,eAAe3K,KACjCyE,SAAU7D,KAAKuJ,kBACfjB,MAAO,cAACL,GAAD,IAJX,SAMKjI,KAAKL,MAAM8J,UAAUzO,KAAI,SAAAgP,GAAI,OAC1B,wBAAwBnP,MAAOmP,EAAK5K,KAApC,SACK4K,EAAKxH,MADGwH,EAAK5K,iB,GAtBb0B,IAAMC,WAgCpBmH,iBAtCG,SAAAC,GAAK,MAAK,CAC1ByB,YAAa,CACX3F,OAAQkE,EAAMhC,QAAQ,GACtB8D,SAAU,OAmCC/B,CAAsBgC,YAAaZ,KChE5Ca,GAAc,CAChB,CACI5E,MAAO,eACP6E,MAAO,CACP,CACIC,IAAK,wFACLC,KAAM,qBAEV,CACID,IAAK,oFACLC,KAAM,mBAEV,CACID,IAAK,+BACLC,KAAM,6BAGd,CACI/E,MAAO,2BACP6E,MAAO,CACP,CACIC,IAAK,4IACLC,KAAM,wBAEV,CACID,IAAK,4EACLC,KAAM,0BAEV,CACID,IAAK,wHACLC,KAAM,4BAKlB,SAASC,KACL,OACI,cAACrH,GAAA,EAAD,CAAMC,WAAS,EAACgD,QAAS,EAAG9C,QAAQ,eAApC,SACK8G,GAAYnP,KAAI,SAACwP,GAAD,OACb,eAACtH,GAAA,EAAD,CAAMtI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,EAAvB,UACI,cAACrC,GAAA,EAAD,CAAYE,QAAQ,KAAKR,MAAM,cAAcU,cAAY,EAAzD,SACI,cAAC,IAAD,CAAWxB,GAAIyK,EAAOjF,UAE1B,6BACKiF,EAAOJ,MAAMpP,KAAI,SAACJ,GAAD,OACd,6BACI,cAAC+L,GAAA,EAAD,CAAMC,KAAMhM,EAAKyP,IAAK9H,OAAO,SAASsE,IAAI,aAAaxF,QAAQ,YAAYR,MAAM,gBAAjF,SACI,cAAC,IAAD,CAAWd,GAAInF,EAAK0P,UAFnB1P,EAAK0P,aANKE,EAAOjF,YAmBtD,SAASkF,KACL,OACI,eAACtJ,GAAA,EAAD,CAAYE,QAAQ,QAAQR,MAAM,gBAAgBS,MAAM,SAAxD,UACI,cAAC,IAAD,CAAWvB,GAAG,qBAAsB,IACpC,cAAC4G,GAAA,EAAD,CAAM9F,MAAM,UAAU+F,KAAK,+BAA+BrE,OAAO,SAASsE,IAAI,aAA9E,+BAEQ,KACP,IAAIjN,MAAO8Q,iBAKxB,IAiDMC,G,2KACQ,IACEjB,EAAY1J,KAAKL,MAAjB+J,QACFkB,EAAmBC,aAAKnB,EAAQf,MAAOe,EAAQoB,aAErD,OACI,eAAC,IAAMC,SAAP,WACI,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAQ/D,SAAS,SAASrG,MAAM,UAAUqK,UAAW,EAAGvK,UAAW+I,EAAQyB,OAA3E,SACI,eAACC,GAAA,EAAD,CAASzK,UAAW+I,EAAQ2B,QAA5B,UACI,cAAClK,GAAA,EAAD,CAAYE,QAAQ,KAAKR,MAAM,UAAUyK,QAAM,EAAC3K,UAAW+I,EAAQ6B,aAAnE,SACI,cAAC,IAAD,CAAWxL,GAAG,sBAUlB,cAAC,GAAD,SAIR,cAACkF,GAAA,EAAD,CAAWuG,SAAS,KAAKpK,UAAU,OAAOT,UAAW+I,EAAQ+B,YAA7D,SACI,eAACxK,GAAA,EAAD,CAAKC,EAAG,EAAR,UACI,cAACC,GAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,SAAST,MAAM,cAAcU,cAAY,EAAvF,SACI,cAAC,IAAD,CAAWxB,GAAG,uBAElB,cAACoB,GAAA,EAAD,CAAYG,MAAM,OAAOT,MAAM,gBAAgBO,UAAU,IAAzD,SACI,cAAC,IAAD,CAAWrB,GAAG,uBAElB,cAACoB,GAAA,EAAD,CAAYG,MAAM,OAAOT,MAAM,gBAAgBO,UAAU,IAAzD,SACI,cAAC,IAAD,CAAWrB,GAAG,0BACV/D,KAAM,CACF0P,kBAAmB,cAAC/E,GAAA,EAAD,CAAMC,KAAK,4IAA4IrE,OAAO,SAASsE,IAAI,aAA3K,SAAwL,cAAC,IAAD,CAAW9G,GAAG,kBACzN4L,WAAY,cAAChF,GAAA,EAAD,CAAMC,KAAK,4EAA4ErE,OAAO,SAASsE,IAAI,aAA3G,SAAwH,cAAC,IAAD,CAAW9G,GAAG,4BAOtK,cAACkF,GAAA,EAAD,CAAWuG,SAAS,KAAKpK,UAAU,OAAnC,SACI,eAAC8B,GAAA,EAAD,CAAMC,WAAS,EAACgD,QAAS,EAAzB,UACI,cAACjD,GAAA,EAAD,CAAMtI,MAAI,EAAC2I,GAAI,GAAI5C,UAAW+I,EAAQkC,MAAtC,SACI,cAAC,GAAD,CAAuBjL,UAAW+I,EAAQf,UAE9C,cAACzF,GAAA,EAAD,CAAMtI,MAAI,EAAC2I,GAAI,GAAI5C,UAAW+I,EAAQkC,MAAtC,SACI,cAAC,GAAD,CAAkBjL,UAAWiK,MAEjC,cAAC1H,GAAA,EAAD,CAAMtI,MAAI,EAAC2I,GAAI,GAAI5C,UAAW+I,EAAQkC,MAAtC,SACI,cAAC,GAAD,CAAuBjL,UAAWiK,MAEtC,cAAC1H,GAAA,EAAD,CAAMtI,MAAI,EAAC2I,GAAI,GAAI5C,UAAW+I,EAAQkC,MAAtC,SACI,cAAC,GAAD,CAAsBjL,UAAWiK,WAK7C,eAAC3F,GAAA,EAAD,CAAWuG,SAAS,KAAKpK,UAAU,SAAST,UAAW+I,EAAQc,OAA/D,UACI,cAACD,GAAD,IACA,cAACtJ,GAAA,EAAD,CAAK4K,GAAI,EAAT,SACI,cAACpB,GAAD,gB,GAhEH3J,IAAMC,WAyEZmH,iBA1HG,SAAAC,GAAK,MAAK,CACxB,UAAW,CACT2D,GAAI,CACF7H,OAAQ,EACR4E,QAAS,EACTkD,UAAW,SAGfZ,OAAQ,CACN3C,gBAAiBL,EAAMM,QAAQuD,MAC/BC,aAAa,aAAD,OAAe9D,EAAMM,QAAQyD,UAE3Cb,QAAS,CACPc,SAAU,QAEZZ,aAAc,CACZa,SAAU,GAEZC,KAAM,CACJpI,OAAQkE,EAAMhC,QAAQ,EAAG,MAE3BsF,YAAa,CACX5C,QAASV,EAAMhC,QAAQ,EAAG,EAAG,IAE/BmG,WAAY,CACV9D,gBACyB,UAAvBL,EAAMM,QAAQhO,KAAmB0N,EAAMM,QAAQ8D,KAAK,KAAOpE,EAAMM,QAAQ8D,KAAK,MAElFC,YAAa,CACXC,QAAS,OACTC,eAAgB,SAChBpJ,WAAY,WACZqJ,aAAcxE,EAAMhC,QAAQ,IAE9ByF,MAAO,CACLe,aAAcxE,EAAMhC,QAAQ,IAE9BqE,OAAO,aACLoC,UAAU,aAAD,OAAezE,EAAMM,QAAQyD,SACtC7D,UAAWF,EAAMhC,QAAQ,GACzB0G,WAAY1E,EAAMhC,QAAQ,GAC1B2G,cAAe3E,EAAMhC,QAAQ,IAC5BgC,EAAM4E,YAAYC,GAAG,MAAQ,CAC5BH,WAAY1E,EAAMhC,QAAQ,GAC1B2G,cAAe3E,EAAMhC,QAAQ,QA8EtB+B,CAAsByC,IC1M/BsC,GACE,KADFA,GAEE,KAGFxD,GAAY,CACd,CAAEjH,KAAM,KAAMpD,KAAM6N,IACpB,CAAEzK,KAAM,KAAMpD,KAAM6N,KAGlBC,G,oDACF,WAAYvN,GAAQ,IAAD,+BACf,cAAMA,IAIVwN,kBAAoB,WAChB,EAAKxN,MAAMyN,WAAW,CAClB3D,aACA4D,QAAS,CACLC,6CACAC,iBAAiB,EACjBC,gBAAiBP,GACjBlD,eAAgBkD,MAIxB,EAAKtN,MAAM8N,0BAA0BC,GAAgBT,IACrD,EAAKtN,MAAM8N,0BAA0BE,GAAgBV,KAfrD,EAAKE,oBAFU,E,sDAqBf,OACI,cAAC,GAAD,Q,GAvBOrM,IAAMC,WA4BVmJ,eAAagD,I,OClCbU,OANf,WACI,OACI,cAAC,GAAD,KCIFC,I,cAAQC,YAAYlP,KAE1BmP,iBACI,cAAC,IAAD,CAAUF,MAAOA,GAAjB,SACI,cAAC,IAAD,CAAkBA,MAAOA,GAAzB,SACI,cAAC,GAAD,QAGRG,SAASC,eAAe,W","file":"static/js/main.6e1ee7ef.chunk.js","sourcesContent":["export const SET_LANGUAGE = 'SET_LANGUAGE';\nexport const FETCH_COUNTRY_STATISTICS = 'FETCH_COUNTRY_STATISTICS';\nexport const SET_COUNTRY_WIDE_FILTER = 'SET_COUNTRY_WIDE_FILTER';\nexport const FETCH_COUNTRY_TOTALS = 'FETCH_COUNTRY_TOTALS';\nexport const FETCH_HOSPITALISATIONS = 'FETCH_HOSPITALISATIONS';\nexport const FETCH_STATISTICS_BY_AGE = 'FETCH_STATISTICS_BY_AGE';","export const STATE = { \n    INITIAL: \"initial\",\n    SYNCHED: \"synched\"\n};\n\n// https://www.schemecolor.com/stunning-pie-chart-color-scheme.php\nexport const PALETTE = {\n    COLOR_1: \"#FFF1C9\",\n    COLOR_2: \"#F7B7A3\",\n    COLOR_3: \"#EA5F89\",\n    COLOR_4: \"#9B3192\",\n    COLOR_5: \"#57167E\",\n    COLOR_6: \"#2B0B3F\"\n};\n\nexport const NUMBER_OF_TESTS_MEASURE_ID = \"445356\";\nexport const NUMBER_OF_POSITIVE_CASES_MEASURE_ID = \"444833\";\nexport const NUMBER_OF_DEATHS_MEASURE_ID = \"492118\";\nexport const POPULATION_MEASURE_ID = \"445344\";\n\nexport const MEASURE_LABEL_TRANSLATION_KEY_MAP = {\n    [NUMBER_OF_TESTS_MEASURE_ID]: \"statistics.numberOfTests\",\n    [NUMBER_OF_POSITIVE_CASES_MEASURE_ID]: \"statistics.numberOfPositiveCases\",\n    [NUMBER_OF_DEATHS_MEASURE_ID]: \"statistics.numberOfDeaths\"\n};\n\nexport const ALL_HOSPITALISATION_AREA_ID = 0;\nexport const HELSINKI_HOSPITALISATION_AREA_ID = 1;\nexport const KUOPIO_HOSPITALISATION_AREA_ID = 2;\nexport const OULU_HOSPITALISATION_AREA_ID = 3;\nexport const TAMPERE_HOSPITALISATION_AREA_ID = 4;\nexport const TURKU_HOSPITALISATION_AREA_ID = 5;\n\nexport const HOSPITALISATION_AREA_SHORT_LABEL_TRANSLATION_KEY_MAP = {\n    [ALL_HOSPITALISATION_AREA_ID]: \"statistics.nationwide\",\n    [HELSINKI_HOSPITALISATION_AREA_ID]: \"geography.helsinki_\",\n    [KUOPIO_HOSPITALISATION_AREA_ID]: \"geography.kuopio_\",\n    [OULU_HOSPITALISATION_AREA_ID]: \"geography.oulu_\",\n    [TAMPERE_HOSPITALISATION_AREA_ID]: \"geography.tampere_\",\n    [TURKU_HOSPITALISATION_AREA_ID]: \"geography.turku_\",\n};\n\nexport const HOSPITALISATION_AREA_LABEL_TRANSLATION_KEY_MAP = {\n    [ALL_HOSPITALISATION_AREA_ID]: \"statistics.nationwideTotal\",\n    [HELSINKI_HOSPITALISATION_AREA_ID]: \"geography.helsinki_university_area\",\n    [KUOPIO_HOSPITALISATION_AREA_ID]: \"geography.kuopio_university_area\",\n    [OULU_HOSPITALISATION_AREA_ID]: \"geography.oulu_university_area\",\n    [TAMPERE_HOSPITALISATION_AREA_ID]: \"geography.tampere_university_area\",\n    [TURKU_HOSPITALISATION_AREA_ID]: \"geography.turku_university_area\",\n};\n\n/*\n\t\"areas\": [\n\t\t{ \n\t\t\t\"id\": 1,\n\t\t\t\"name\": \"Helsinki University Hospital catchment area\"\n\t\t},\n\t\t{ \n\t\t\t\"id\": 2,\n\t\t\t\"name\": \"Kuopio University Hospital catchment area\"\n\t\t},\n\t\t{ \n\t\t\t\"id\": 3,\n\t\t\t\"name\": \"Oulu University Hospital catchment area\"\n\t\t},\n\t\t{ \n\t\t\t\"id\": 4,\n\t\t\t\"name\": \"Tampere University Hospital catchment area\"\n\t\t},\n\t\t{ \n\t\t\t\"id\": 5,\n\t\t\t\"name\": \"Turku University Hospital catchment area + Åland\"\n\t\t}\n\t],\n*/","import moment from 'moment';\nimport 'moment/locale/ru';\nimport 'moment/locale/en-gb';\n\nexport function groupBy(items, key) {\n    return items.reduce(\n        (result, item) => ({\n            ...result,\n            [item[key]]: [\n                ...(result[item[key]] || []),\n                item,\n            ],\n        }), {});\n}\n\nexport function formatDate(date, locale, format) {\n    return moment(new Date(date)).locale(locale).format(format);\n}\n\nexport function formatNumber(number, locale) { \n    return number.toLocaleString(locale);\n}","import { FETCH_COUNTRY_STATISTICS, FETCH_COUNTRY_TOTALS, FETCH_HOSPITALISATIONS, FETCH_STATISTICS_BY_AGE } from './actionTypes';\nimport { allMeasuresDaily, allMeasuresWeekly, additionalStatistics, allPositiveCasesByAge, allDeathsByAge, labels } from '../data';\nimport JSONstat from \"jsonstat-toolkit\";\nimport {POPULATION_MEASURE_ID, NUMBER_OF_TESTS_MEASURE_ID, NUMBER_OF_POSITIVE_CASES_MEASURE_ID, NUMBER_OF_DEATHS_MEASURE_ID} from '../constants';\nimport {groupBy} from \"../utils\";\n\n// show only number of tests, positive cases and deaths\nconst MEASURES = [\n    NUMBER_OF_TESTS_MEASURE_ID, \n    NUMBER_OF_POSITIVE_CASES_MEASURE_ID, \n    NUMBER_OF_DEATHS_MEASURE_ID\n];\n\n// In weekly statistics it indicates total for all the time\nconst TIME_MEASURE_ID = \"443686\";\nconst ALL_AGES_MEASURE_ID = \"444309\";\n\nconst DAY_PROP_NAME = \"dateweek2020010120201231\";\nconst AGE_PROP_NAME = \"ttr10yage\";\n\n// In statistics can be this placeholder instead of actual number.\n// \"..\" means that actual number is unknown, but it is between 1 and 4 (inclusive).\nconst LESS_THEN_FIVE_PLACEHOLDER = \"..\";\n\nfunction getCountryStatistics() {\n    const J = JSONstat(allMeasuresDaily);\n    const data = J.Dataset(0).toTable({ type : \"arrobj\", content: \"id\"});\n    const dataToShow = data\n        .filter(item => item.value != null && MEASURES.includes(item.measure))\n        .map(item => {\n            var date = labels.days[item[DAY_PROP_NAME]];\n            return { \n                measure: item.measure,  \n                value: +item.value,\n                date: date\n            };\n        });    \n    const groupsByDate = groupBy(dataToShow, \"date\");\n    const resultData = [];\n    Object.keys(groupsByDate).forEach(key => {\n        const arr = groupsByDate[key];\n        let obj = {date: key};\n        arr.forEach(val => {\n            obj[val.measure] = val.value;\n        });\n        resultData.push(obj);\n    });\n\n    return resultData;\n}\n\nfunction getTotalsFromWeeklyData() {\n    const J = JSONstat(allMeasuresWeekly);\n    const data = J.Dataset(0)\n        .toTable({ type : \"arrobj\", content: \"id\" })\n        .filter(x => x[DAY_PROP_NAME] === TIME_MEASURE_ID);\n\n    let totals = {};\n    \n    data.forEach(x => {\n        totals[x.measure] = +x.value;\n    });\n    \n    return {\n        population: totals[POPULATION_MEASURE_ID], \n\t\tnumberOfTests: totals[NUMBER_OF_TESTS_MEASURE_ID],\n        numberOfPositiveCases: totals[NUMBER_OF_POSITIVE_CASES_MEASURE_ID],\n        numberOfDeaths: totals[NUMBER_OF_DEATHS_MEASURE_ID],\n    };\n}\n\nfunction getCountryTotals() {\n    const totals = getTotalsFromWeeklyData();\n    return {\n        ...additionalStatistics.allTimeTotals,\n        ...totals\n    }\n}\n\nfunction getHospitalisations() {\n    return {\n        areas: additionalStatistics.areas,\n        hospitalisationsByArea: additionalStatistics.currentHospitalisationsByArea\n    };\n}\n\nfunction getStatisticsByAge(dataJson) {\n    const J = JSONstat(dataJson);\n    const data = J.Dataset(0).toTable({ type : \"arrobj\", content: \"id\"});\n    const dataToShow = data\n        .map(item => {\n            const measureId = item[AGE_PROP_NAME];\n            const age = labels.ages[item[AGE_PROP_NAME]];\n            const isLessThenFive = item.value === LESS_THEN_FIVE_PLACEHOLDER;\n            return { \n                measureId,\n                age,\n                value: isLessThenFive ? 4 : +item.value, // if less then 5, put 4 to avoid out of type\n                isLessThenFive: isLessThenFive,\n                isTotal: measureId === ALL_AGES_MEASURE_ID\n            };\n        })\n        //.filter(item => item.measureId !== ALL_AGES_MEASURE_ID);  \n    return dataToShow;\n}\n\nexport function fetchCountryStatistics() {\n    return { type: FETCH_COUNTRY_STATISTICS, data: getCountryStatistics() };\n}\n\nexport function fetchCountryTotals() {\n    return { type: FETCH_COUNTRY_TOTALS, data: getCountryTotals() };\n}\n\nexport function fetchHospitalisations() {\n    return { type: FETCH_HOSPITALISATIONS, data: getHospitalisations() };\n}\n\nexport function fetchStatisticsByAge() {\n    return { \n        type: FETCH_STATISTICS_BY_AGE, \n        data: {\n            numberOfPositiveCases: getStatisticsByAge(allPositiveCasesByAge),\n            numberOfDeaths: getStatisticsByAge(allDeathsByAge)\n        }\n    };\n}","import {NUMBER_OF_TESTS_MEASURE_ID, NUMBER_OF_POSITIVE_CASES_MEASURE_ID, NUMBER_OF_DEATHS_MEASURE_ID} from '../constants';\n\nexport default {\n    statistics: {\n        countryStatistics: {\n            items: [],\n            loaded: false\n        },\n        countryTotals: {\n            data: {},\n            loaded: false\n        },\n        hospitalisations: {\n            data: {},\n            loaded: false\n        },\n        statisticsByAge: {\n            data: {},\n            loaded: false\n        }\n    },\n    filters: {\n        countryWide: {\n            selectedMeasures: [\n                NUMBER_OF_TESTS_MEASURE_ID, \n                NUMBER_OF_POSITIVE_CASES_MEASURE_ID, \n                NUMBER_OF_DEATHS_MEASURE_ID\n            ],\n            selectedRegionId: null\n        }\n    }\n};","import { combineReducers } from 'redux';\nimport { FETCH_COUNTRY_STATISTICS, FETCH_COUNTRY_TOTALS, FETCH_HOSPITALISATIONS, FETCH_STATISTICS_BY_AGE } from '../actions';\nimport initialState from './initialState';\n\nfunction countryStatistics(state = initialState.statistics.countryStatistics, action) {\n    switch (action.type) {\n        case FETCH_COUNTRY_STATISTICS:\n            return {\n                items: [...action.data],\n                loaded: true\n            };\n        default:\n            return state;\n    }\n}\n\nfunction countryTotals(state = initialState.statistics.countryTotals, action) {\n    switch (action.type) {\n        case FETCH_COUNTRY_TOTALS:\n            return {\n                data: {...action.data},\n                loaded: true\n            };\n        default:\n            return state;\n    }\n}\n\nfunction hospitalisations(state = initialState.statistics.hospitalisations, action) {\n    switch (action.type) {\n        case FETCH_HOSPITALISATIONS:\n            return {\n                data: {...action.data},\n                loaded: true\n            };\n        default:\n            return state;\n    }\n}\n\nfunction statisticsByAge(state = initialState.statistics.statisticsByAge, action) {\n    switch (action.type) {\n        case FETCH_STATISTICS_BY_AGE:\n            return {\n                data: {...action.data},\n                loaded: true\n            };\n        default:\n            return state;\n    }\n}\n\nconst statisticsReducer = combineReducers({\n    countryStatistics,\n    countryTotals,\n    hospitalisations,\n    statisticsByAge\n});\n\nexport default statisticsReducer;","import { SET_COUNTRY_WIDE_FILTER } from '../actions';\nimport initialState from './initialState';\n\n\nfunction filtersReducer(state = initialState.filters, action) {\n    switch (action.type) {\n    case SET_COUNTRY_WIDE_FILTER:\n        return {\n            ...state,\n            countryWide: action.countryWideFilter\n        };\n    default:\n        return state;\n    }\n}\n\nexport default filtersReducer;","import { combineReducers } from 'redux';\nimport { localizeReducer } from \"react-localize-redux\";\nimport statisticsReducer from './statisticsReducer';\nimport filtersReducer from './filtersReducer';\n\nconst rootReducer = combineReducers({\n    localize: localizeReducer,\n    statistics: statisticsReducer,\n    filters: filtersReducer\n});\n\nexport default rootReducer;","import { getTranslate, getActiveLanguage } from 'react-localize-redux';\nimport { bindActionCreators } from 'redux';\nimport { statisticsActions } from '../actions';\n\nexport const mapStateToProps = state => {\n    return {\n        translate: getTranslate(state.localize),\n        currentLanguage: getActiveLanguage(state.localize).code,\n        countryStatistics: state.statistics.countryStatistics\n    };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        statisticsActions: bindActionCreators(statisticsActions, dispatch)\n    };\n};","import { getTranslate, getActiveLanguage } from 'react-localize-redux';\nimport { bindActionCreators } from 'redux';\nimport { statisticsActions } from '../actions';\n\nexport const mapStateToProps = state => {\n    return {\n        translate: getTranslate(state.localize),\n        currentLanguage: getActiveLanguage(state.localize).code,\n        countryTotals: state.statistics.countryTotals\n    };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        statisticsActions: bindActionCreators(statisticsActions, dispatch)\n    };\n};","import { getTranslate, getActiveLanguage } from 'react-localize-redux';\nimport { bindActionCreators } from 'redux';\nimport { statisticsActions } from '../actions';\n\nexport const mapStateToProps = state => {\n    return {\n        translate: getTranslate(state.localize),\n        currentLanguage: getActiveLanguage(state.localize).code,\n        hospitalisations: state.statistics.hospitalisations\n    };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        statisticsActions: bindActionCreators(statisticsActions, dispatch)\n    };\n};","import { getTranslate, getActiveLanguage } from 'react-localize-redux';\nimport { bindActionCreators } from 'redux';\nimport { statisticsActions } from '../actions';\n\nexport const mapStateToProps = state => {\n    return {\n        translate: getTranslate(state.localize),\n        currentLanguage: getActiveLanguage(state.localize).code,\n        statisticsByAge: state.statistics.statisticsByAge\n    };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        statisticsActions: bindActionCreators(statisticsActions, dispatch)\n    };\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Translate } from \"react-localize-redux\";\nimport { formatDate } from '../../utils';\nimport {MEASURE_LABEL_TRANSLATION_KEY_MAP} from '../../constants';\nimport '../ChartTooltip.css';\n\nclass ComposedChartTooltip extends React.Component {\n    _getFormattedDate = (date) => {\n        return formatDate(date, this.props.currentLanguage, 'DD MMMM YYYY');\n    }\n\n    _getFormattedNumber = (value) => { \n        return value ? value.toLocaleString(this.props.currentLanguage) : value;\n    }\n\n    _renderMeasureLabel = (measureId) => {\n        const translationKey = MEASURE_LABEL_TRANSLATION_KEY_MAP[measureId];\n        return <Translate id={translationKey} />;\n    }\n  \n    render() {\n        const { active, payload, label, separator, measureIds } = this.props;\n\n        if(!active || !payload.length) {\n            return null;\n        }\n\n        const point = payload[0].payload;\n        const colors = {};\n\n        payload.forEach(x => {\n            colors[x.dataKey] = x.stroke;\n        });\n\n        return (\n            <div className=\"custom-tooltip\">\n                <div className=\"title\">\n                    {this._getFormattedDate(label)}\n                </div>\n                {\n                    measureIds.map(id => (\n                        <div key={id} className=\"measure\" style={colors[id] ? {color: colors[id] } : null}>\n                            {this._renderMeasureLabel(id)}\n                            {separator}\n                            {this._getFormattedNumber(point[id])}\n                        </div>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nComposedChartTooltip.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    type: PropTypes.string,\n    payload: PropTypes.array,\n    label: PropTypes.string,\n    separator: PropTypes.string,\n    measureIds: PropTypes.array\n};\n\nexport default ComposedChartTooltip;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function Title(props) {\n    return (\n        <Box p={3}>\n            <Typography component=\"h2\" variant=\"h5\" color=\"textPrimary\" align=\"center\" gutterBottom>\n                {props.children}\n            </Typography>\n        </Box>    \n    );\n}\n\nTitle.propTypes = {\n    children: PropTypes.node,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    ComposedChart, Line, Area, ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n    Tooltip, Legend\n} from 'recharts';\nimport { Translate } from \"react-localize-redux\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { formatDate, formatNumber } from '../../utils';\nimport {AllMeasuresChartContainer as Container} from '../../containers';\nimport {\n    NUMBER_OF_TESTS_MEASURE_ID, NUMBER_OF_POSITIVE_CASES_MEASURE_ID, \n    NUMBER_OF_DEATHS_MEASURE_ID, MEASURE_LABEL_TRANSLATION_KEY_MAP,\n    PALETTE\n} from '../../constants';\nimport CustomTooltip from './ComposedChartTooltip';\nimport Paper from '@material-ui/core/Paper';\nimport ChartTitle from '../ChartTitle';\nimport './AllMeasuresChart.css';\n\nconst MEASURE_IDS = [NUMBER_OF_TESTS_MEASURE_ID, NUMBER_OF_POSITIVE_CASES_MEASURE_ID, NUMBER_OF_DEATHS_MEASURE_ID];\n\nconst MEASURE_COLOR_MAP = {\n    [NUMBER_OF_TESTS_MEASURE_ID]: PALETTE.COLOR_3, // \"#ff7c43\",  \n    [NUMBER_OF_POSITIVE_CASES_MEASURE_ID]: PALETTE.COLOR_4, // \"#a05195\", \n    [NUMBER_OF_DEATHS_MEASURE_ID]: PALETTE.COLOR_5 // \"#2f4b7c\" \n};\n\nconst DEFAULT_LINE_OPACITY = 0.8;\n  \nclass AllMeasuresChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            opacity: {\n                [NUMBER_OF_TESTS_MEASURE_ID]: DEFAULT_LINE_OPACITY,\n                [NUMBER_OF_POSITIVE_CASES_MEASURE_ID]: DEFAULT_LINE_OPACITY,\n                [NUMBER_OF_DEATHS_MEASURE_ID]: DEFAULT_LINE_OPACITY\n            },\n            visibleMeasures: [\n                NUMBER_OF_TESTS_MEASURE_ID, \n                NUMBER_OF_POSITIVE_CASES_MEASURE_ID, \n                NUMBER_OF_DEATHS_MEASURE_ID\n            ]\n        };\n    }\n\n    componentDidMount() {\n        if(!this.props.countryStatistics.loaded) {\n            this.props.statisticsActions.fetchCountryStatistics();\n        }\n    }\n\n    _formatXAxis = (tickItem) => { \n        return formatDate(tickItem, this.props.currentLanguage, 'DD MMM');\n    }\n\n    _formatYAxis = (tickItem) => { \n        return formatNumber(tickItem, this.props.currentLanguage);\n    }\n\n    _formatLegendItem = (value, entry) => {\n        const translationKey = MEASURE_LABEL_TRANSLATION_KEY_MAP[value];\n        return <Translate id={translationKey} />;\n    }\n\n    _onLegendClick = (e) => {\n        const measureId = e.dataKey;\n        this._toggleMeasure(measureId);\n    }\n\n    _onMeasureCheckBoxChange = (event) => {\n        const measureId = event.target.name;\n        this._toggleMeasure(measureId);      \n    }\n\n    _toggleMeasure = (measureId) => {\n        const visibleMeasures = this.state.visibleMeasures;\n\n        this.setState({\n            visibleMeasures: visibleMeasures.includes(measureId) ?\n                visibleMeasures.filter(x => x !== measureId) :\n                [...visibleMeasures, measureId]\n        });\n    }\n\n    _onLegendMouseEnter = (o) => {\n        const { dataKey } = o;\n        const { opacity } = this.state;\n    \n  \t    this.setState({\n    \t    opacity: { ...opacity, [dataKey]: 1 }\n        });\n    }\n\n    _onLegendMouseLeave = (o) => {\n        const { dataKey } = o;\n        const { opacity } = this.state;\n    \n  \t    this.setState({\n    \t    opacity: { \n                ...opacity, \n                [dataKey]: DEFAULT_LINE_OPACITY \n            },\n        });\n    }\n\n    _renderFilters = () => {\n        const { visibleMeasures } = this.state;\n\n        return (\n            <Box pl={2} pr={2}>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"baseline\">\n                    {MEASURE_IDS.map(id => (\n                        <Grid key={id} item xs={6} sm={3}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        name={id}\n                                        checked={visibleMeasures.includes(id)} \n                                        onChange={this._onMeasureCheckBoxChange} \n                                        style ={{\n                                            color: MEASURE_COLOR_MAP[id],\n                                        }}\n                                    />\n                                }\n                                label={\n                                    <Typography variant=\"body2\" style={{ color: MEASURE_COLOR_MAP[id] }}>\n                                        <Translate id={MEASURE_LABEL_TRANSLATION_KEY_MAP[id]} />\n                                    </Typography>     \n                                }\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            </Box>\n        )\n    }\n      \n    render() {\n        const { className, countryStatistics } = this.props;\n        const { visibleMeasures, opacity } = this.state;\n\n        if(!countryStatistics.loaded) {\n            return (\n                <Paper className={className}>\n                    <Translate id={\"loading\"} />\n                </Paper>\n            );\n        }\n\n        return (\n            <Paper className={className}>\n                <ChartTitle>\n                    <Translate id=\"statistics.allMeasuresChartTitle\" />\n                </ChartTitle>\n                {this._renderFilters()}\n                <div style={{ width: '100%', height: '500px'}}>\n                    <ResponsiveContainer>\n                        <ComposedChart\n                            data={countryStatistics.items}\n                            margin={{\n                                top: 20, right: 30, bottom: 20, left: 20,\n                            }}\n                        >\n                            <CartesianGrid stroke=\"#f5f5f5\" />\n                            <XAxis dataKey=\"date\" tickFormatter={this._formatXAxis}/>\n                            <YAxis tickFormatter={this._formatYAxis}/>\n                            <Tooltip content={\n                                <CustomTooltip \n                                    translate={this.props.translate} \n                                    currentLanguage={this.props.currentLanguage}\n                                    measureIds={MEASURE_IDS}\n                                />}\n                            />\n                            <Legend \n                                formatter={this._formatLegendItem} \n                                onClick={this._onLegendClick}\n                                onMouseOver={this._onLegendMouseEnter}\n                                onMouseOut={this._onLegendMouseLeave}\n                            />\n                            <Line \n                                type=\"monotone\" \n                                strokeOpacity={opacity[NUMBER_OF_TESTS_MEASURE_ID]} \n                                dataKey={NUMBER_OF_TESTS_MEASURE_ID} \n                                stroke={MEASURE_COLOR_MAP[NUMBER_OF_TESTS_MEASURE_ID]}\n                                hide={!visibleMeasures.includes(NUMBER_OF_TESTS_MEASURE_ID)}\n                                dot={false}\n                            />\n                            {\n                                [NUMBER_OF_POSITIVE_CASES_MEASURE_ID, NUMBER_OF_DEATHS_MEASURE_ID].map(id => (\n                                    <Area \n                                        key={id}\n                                        type=\"monotone\" \n                                        dataKey={id} \n                                        hide={!visibleMeasures.includes(id)}\n                                        fill={MEASURE_COLOR_MAP[id]}\n                                        stroke={MEASURE_COLOR_MAP[id]}\n                                        fillOpacity={opacity[id]}\n                                    />\n                                ))\n                            }\n                        </ComposedChart>\n                    </ResponsiveContainer>\n                </div>\n            </Paper>\n          );\n    }\n}\n\nAllMeasuresChart.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    className: PropTypes.string,\n    countryStatistics: PropTypes.object.isRequired,\n    statisticsActions: PropTypes.object,\n    filtersActions: PropTypes.object\n};\n\nexport default connect(Container.mapStateToProps, Container.mapDispatchToProps)(AllMeasuresChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Translate } from \"react-localize-redux\";\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { formatNumber } from '../../utils';\n\nclass MeasureCard extends React.Component {\n    render() {\n        const { labelTranslationId, value, valueColor, tooltipTranslationId } = this.props;\n    \n        return (\n            <Grid item xs={6}>\n                <Paper>\n                    <Box p={1}>\n                        <Typography color=\"textPrimary\" gutterBottom>\n                            <Translate id={labelTranslationId} />\n                            &nbsp;\n                            {\n                                tooltipTranslationId ? \n                                    <Tooltip title={<Translate id={tooltipTranslationId} />} placement=\"top\" arrow enterTouchDelay={500}>\n                                        <InfoIcon style={{ fontSize: 20, opacity: 0.3 }}/>\n                                    </Tooltip> :\n                                    null\n                            }\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\" style={{ color: valueColor, fontWeight: 600 }}>\n                            {formatNumber(value, this.props.currentLanguage)}\n                        </Typography>\n                    </Box>\n                </Paper>\n            </Grid>\n        );\n    }\n}\n\nMeasureCard.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    labelTranslationId: PropTypes.string,\n    value: PropTypes.number,\n    valueColor: PropTypes.string,\n    tooltipTranslationId: PropTypes.string\n};\n\nexport default MeasureCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Translate } from \"react-localize-redux\";\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport {CurrentSituationContainer as Container} from '../../containers';\nimport ChartTitle from '../ChartTitle';\nimport MeasureCard from './MeasureCard';\nimport { formatDate } from '../../utils';\n\nclass CurrentSituationPanel extends React.Component {\n    componentDidMount() {\n        if(!this.props.countryTotals.loaded) {\n            this.props.statisticsActions.fetchCountryTotals();\n        }\n    }\n\n    _formatDate = (date) => { \n        return formatDate(date, this.props.currentLanguage, 'DD MMMM YYYY');\n    }\n      \n    render() {\n        const { countryTotals, className } = this.props;\n\n        if(!countryTotals.loaded) {\n            return (\n                <Paper className={className}>\n                    <Translate id={\"loading\"} />\n                </Paper>\n            );\n        }\n\n        const { day, population, numberOfTests, numberOfPositiveCases, numberOfRecovered, numberOfDeaths } = countryTotals.data;\n\n        return (\n            <Paper className={className}>\n                <ChartTitle>\n                    <Translate id=\"statistics.currentSituationTitle\" data={{ date: this._formatDate(day) }}/>\n                </ChartTitle>\n                <Box pt={0} pr={2} pb={2} pl={2}>\n                    <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                        <MeasureCard key=\"1\" labelTranslationId=\"statistics.population\" value={population} valueColor={\"#0277BD\"}/>\n                        <MeasureCard key=\"2\" labelTranslationId=\"statistics.totalNumberOfTests\" value={numberOfTests} valueColor={\"#0277BD\"}/>\n                        <MeasureCard key=\"3\" labelTranslationId=\"statistics.totalNumberOfPositiveCases\" value={numberOfPositiveCases} valueColor={\"#FF8F00\"}/>\n                        <MeasureCard key=\"4\" labelTranslationId=\"statistics.totalNumberOfRecovered\" value={numberOfRecovered} valueColor={\"#2E7D32\"} tooltipTranslationId=\"statistics.totalNumberOfRecoveredHint\"/>\n                        <MeasureCard key=\"5\" labelTranslationId=\"statistics.totalNumberOfDeaths\" value={numberOfDeaths} valueColor={\"#D50000\"}/>\n                    </Grid>\n                </Box>\n            </Paper>\n          );\n    }\n}\n\nCurrentSituationPanel.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    className: PropTypes.string,\n    countryTotals: PropTypes.object.isRequired,\n    statisticsActions: PropTypes.object\n};\n\nexport default connect(Container.mapStateToProps, Container.mapDispatchToProps)(CurrentSituationPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Translate } from \"react-localize-redux\";\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport {\n    BarChart, ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n    Tooltip, Legend, Bar, LabelList\n} from 'recharts';\nimport {HospitalisationsContainer as Container} from '../containers';\nimport ChartTitle from './ChartTitle';\nimport { formatDate, formatNumber } from '../utils';\nimport {\n    HOSPITALISATION_AREA_SHORT_LABEL_TRANSLATION_KEY_MAP, \n    HOSPITALISATION_AREA_LABEL_TRANSLATION_KEY_MAP, PALETTE\n} from '../constants';\n\nconst DEFAULT_BAR_OPACITY = 0.8;\nconst IN_PATIENT_CARE_MEASURE_ID = \"inpatientCare\";\nconst IN_INTENSIVE_CARE_MEASURE_ID = \"inIntensiveCare\";\n\nclass HospitalisationsChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            opacity: {\n                [IN_PATIENT_CARE_MEASURE_ID]: DEFAULT_BAR_OPACITY,\n                [IN_INTENSIVE_CARE_MEASURE_ID]: DEFAULT_BAR_OPACITY\n            },\n            visibleMeasures: [\n                IN_PATIENT_CARE_MEASURE_ID, \n                IN_INTENSIVE_CARE_MEASURE_ID\n            ]\n        };\n    }\n\n    componentDidMount() {\n        if(!this.props.hospitalisations.loaded) {\n            this.props.statisticsActions.fetchHospitalisations();\n        }\n    }\n\n    _formatDate = (date) => { \n        return formatDate(date, this.props.currentLanguage, 'DD MMMM YYYY');\n    }\n\n    _formatXAxis = (tickItem) => { \n        const translationKey = HOSPITALISATION_AREA_SHORT_LABEL_TRANSLATION_KEY_MAP[tickItem]; \n        return this.props.translate(translationKey);\n    }\n\n    _formatYAxis = (tickItem) => { \n        return formatNumber(tickItem, this.props.currentLanguage);\n    }\n\n    _formatLegendItem = (value, entry) => {\n        const translationKey = `statistics.${value}`;\n        return <Translate id={translationKey} />;\n    }\n\n    _formatTooltipLabel = (value, entry) => {\n        const translationKey = HOSPITALISATION_AREA_LABEL_TRANSLATION_KEY_MAP[value]; \n        return this.props.translate(translationKey);\n    }\n\n    _formatTooltipItem = (value, name, props) => {\n        const translationKey = `statistics.${name}`;\n        return [\n            formatNumber(value, this.props.currentLanguage), \n            this.props.translate(translationKey)\n        ];\n    }\n\n    _toggleMeasute = (e) => {\n        const measureId = e.dataKey;\n        const visibleMeasures = this.state.visibleMeasures;\n\n        this.setState({\n            visibleMeasures: visibleMeasures.includes(measureId) ?\n                visibleMeasures.filter(x => x !== measureId) :\n                [...visibleMeasures, measureId]\n        });\n    }\n\n    _onLegendMouseEnter = (o) => {\n        const { dataKey } = o;\n        const { opacity } = this.state;\n    \n  \t    this.setState({\n    \t    opacity: { ...opacity, [dataKey]: 1 }\n        });\n    }\n\n    _onLegendMouseLeave = (o) => {\n        const { dataKey } = o;\n        const { opacity } = this.state;\n    \n  \t    this.setState({\n    \t    opacity: { \n                ...opacity, \n                [dataKey]: DEFAULT_BAR_OPACITY \n            },\n        });\n    }\n      \n    render() {\n        const { hospitalisations, className } = this.props;\n\n        if(!hospitalisations.loaded) {\n            return (\n                <Paper className={className}>\n                    <Translate id={\"loading\"} />\n                </Paper>\n            );\n        }\n\n        const { opacity, visibleMeasures } = this.state;\n        const { hospitalisationsByArea } = hospitalisations.data;\n        const day = hospitalisationsByArea.day;\n\n        return (\n            <Paper className={className}>\n                <ChartTitle>\n                    <Translate id=\"statistics.numberOfPeopleInHospitals\" data={{ date: this._formatDate(day) }}/>\n                    <Box pt={1}>\n                        <Typography align=\"center\" color=\"textSecondary\" component=\"p\">\n                            <Translate id=\"layout.hospitalisationsAbout\" \n                                data={{ \n                                    thlLink: <Link href=\"https://thl.fi/en/web/infectious-diseases-and-vaccinations/what-s-new/coronavirus-covid-19-latest-updates/situation-update-on-coronavirus\" target=\"_blank\" rel=\"noreferrer\"><Translate id=\"layout.here\" /></Link>,\n                                }} \n                            />\n                        </Typography>\n                    </Box>\n                </ChartTitle>\n                <div style={{ width: '100%', height: '300px'}}>\n                    <ResponsiveContainer>\n                        <BarChart\n                            data={hospitalisationsByArea.values}\n                            margin={{\n                                top: 20, right: 30, bottom: 20, left: 20,\n                            }}\n                        >\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"areaId\" tickFormatter={this._formatXAxis}/>\n                            <YAxis tickFormatter={this._formatYAxis}/>\n                            <Tooltip \n                                cursor={{ fill: PALETTE.COLOR_1, fillOpacity: 0.3 }} \n                                labelFormatter={this._formatTooltipLabel} \n                                formatter={this._formatTooltipItem}/>\n                            <Legend \n                                formatter={this._formatLegendItem}\n                                onClick={this._toggleMeasute}\n                                onMouseOver={this._onLegendMouseEnter}\n                                onMouseOut={this._onLegendMouseLeave}\n                            />\n                            <Bar \n                                dataKey={IN_PATIENT_CARE_MEASURE_ID} \n                                stroke={PALETTE.COLOR_3}\n                                fill={PALETTE.COLOR_3}\n                                fillOpacity={opacity[IN_PATIENT_CARE_MEASURE_ID]}\n                                hide={!visibleMeasures.includes(IN_PATIENT_CARE_MEASURE_ID)}\n                            >\n                                <LabelList dataKey={IN_PATIENT_CARE_MEASURE_ID} position=\"top\" />\n                            </Bar>\n                            <Bar \n                                dataKey={IN_INTENSIVE_CARE_MEASURE_ID} \n                                stroke={PALETTE.COLOR_4}\n                                fill={PALETTE.COLOR_4}\n                                fillOpacity={opacity[IN_INTENSIVE_CARE_MEASURE_ID]}\n                                hide={!visibleMeasures.includes(IN_INTENSIVE_CARE_MEASURE_ID)}\n                            >\n                                <LabelList dataKey={IN_INTENSIVE_CARE_MEASURE_ID} position=\"top\" />\n                            </Bar>\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            </Paper>\n          );\n    }\n}\n\nHospitalisationsChart.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    className: PropTypes.string,\n    hospitalisations: PropTypes.object.isRequired,\n    statisticsActions: PropTypes.object\n};\n\nexport default connect(Container.mapStateToProps, Container.mapDispatchToProps)(HospitalisationsChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Translate } from \"react-localize-redux\";\nimport './ChartTooltip.css';\n\nclass BarChartTooltip extends React.Component {\n    _getFormattedNumber = (value) => { \n        return value ? value.toLocaleString(this.props.currentLanguage) : value;\n    }\n\n    _renderMeasureLabel = (measureId) => {\n        const {translationsMap} = this.props;\n        const translationKey = translationsMap[measureId];\n        return <Translate id={translationKey} />;\n    }\n  \n    render() {\n        const { active, payload, label, separator, measureIds, actualValuesKeys } = this.props;\n\n        if(!active || !payload.length) {\n            return null;\n        }\n\n        const point = payload[0].payload;\n        const colors = {};\n\n        payload.forEach(x => {\n            colors[x.dataKey] = x.stroke;\n        });\n\n        return (\n            <div className=\"custom-tooltip\">\n                <div className=\"title\">\n                    {label}\n                </div>\n                {\n                    measureIds.map(id => (\n                        <div key={id} className=\"measure\" style={colors[id] ? {color: colors[id] } : null}>\n                            {this._renderMeasureLabel(id)}\n                            {separator}\n                            {\n                                actualValuesKeys ? \n                                    point[actualValuesKeys[id]] :\n                                    this._getFormattedNumber(point[id])\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nBarChartTooltip.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    type: PropTypes.string,\n    payload: PropTypes.array,\n    label: PropTypes.string,\n    separator: PropTypes.string,\n    measureIds: PropTypes.array,\n    translationsMap: PropTypes.object,\n    actualValuesKeys: PropTypes.object\n};\n\nexport default BarChartTooltip;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Translate } from \"react-localize-redux\";\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport {\n    BarChart, ResponsiveContainer, XAxis, YAxis, CartesianGrid, \n    Tooltip, Legend, Bar, LabelList, Cell\n} from 'recharts';\nimport {StatisticsByAgeContainer as Container} from '../containers';\nimport { formatNumber } from '../utils';\nimport {PALETTE} from '../constants';\nimport ChartTitle from './ChartTitle';\nimport { default as CustomTooltip } from './BarChartTooltip';\n\nconst DEFAULT_BAR_OPACITY = 0.8;\nconst POSITIVE_CASES_MEASURE_ID = \"numberOfPositiveCases\";\nconst DEATHS_MEASURE_ID = \"numberOfDeaths\";\n\nconst MEASURE_ACTUAL_VALUES_MAP = {\n    [POSITIVE_CASES_MEASURE_ID]: \"casesLabel\",\n    [DEATHS_MEASURE_ID]: \"deathsLAbel\"\n};\n\nconst MEASURE_LABEL_TRANSLATION_KEY_MAP = {\n    [POSITIVE_CASES_MEASURE_ID]: \"statistics.numberOfPositiveCases\",\n    [DEATHS_MEASURE_ID]: \"statistics.numberOfDeaths\"\n};\n\nconst MEASURE_COLOR_MAP = {\n    [POSITIVE_CASES_MEASURE_ID]: PALETTE.COLOR_3,\n    [DEATHS_MEASURE_ID]: PALETTE.COLOR_6\n};\n\nclass StatisticsByAgeChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            opacity: {\n                [POSITIVE_CASES_MEASURE_ID]: DEFAULT_BAR_OPACITY,\n                [DEATHS_MEASURE_ID]: DEFAULT_BAR_OPACITY\n            },\n            visibleMeasures: [\n                POSITIVE_CASES_MEASURE_ID, \n                DEATHS_MEASURE_ID\n            ],\n            allAgesVisible: false\n        };\n    }\n\n    componentDidMount() {\n        if(!this.props.statisticsByAge.loaded) {\n            this.props.statisticsActions.fetchStatisticsByAge();\n        }\n    }\n\n    _formatXAxis = (tickItem, value) => { \n        return tickItem;\n    }\n\n    _formatYAxis = (tickItem) => { \n        return formatNumber(tickItem, this.props.currentLanguage);\n    }\n\n    _formatTooltipItem = (value, name, props) => {\n        const {casesLabel, deathsLabel} = props.payload;\n        const realValue = name === POSITIVE_CASES_MEASURE_ID ? casesLabel : deathsLabel;\n        \n        const translationKey = MEASURE_LABEL_TRANSLATION_KEY_MAP[name]; \n        const label = this.props.translate(translationKey);\n        \n        return [\n            realValue, \n            label\n        ];\n    }\n\n    _onLegendClick = (e) => {\n        const measureId = e.dataKey;\n        this._toggleMeasure(measureId);\n    }\n\n    _onMeasureCheckBoxChange = (event) => {\n        const measureId = event.target.name;\n        this._toggleMeasure(measureId);      \n    }\n\n    _toggleMeasure = (measureId) => {\n        const visibleMeasures = this.state.visibleMeasures;\n\n        this.setState({\n            visibleMeasures: visibleMeasures.includes(measureId) ?\n                visibleMeasures.filter(x => x !== measureId) :\n                [...visibleMeasures, measureId]\n        });\n    }\n\n    _formatLegendItem = (value, entry) => {\n        const translationKey = MEASURE_LABEL_TRANSLATION_KEY_MAP[value]; \n        return <Translate id={translationKey} />;\n    }\n\n    _onLegendMouseEnter = (o) => {\n        const { dataKey } = o;\n        const { opacity } = this.state;\n    \n  \t    this.setState({\n    \t    opacity: { ...opacity, [dataKey]: 1 }\n        });\n    }\n\n    _onLegendMouseLeave = (o) => {\n        const { dataKey } = o;\n        const { opacity } = this.state;\n    \n  \t    this.setState({\n    \t    opacity: { \n                ...opacity, \n                [dataKey]: DEFAULT_BAR_OPACITY \n            }\n        });\n    }\n\n    _onAllAgesCheckBoxChange = (event) => {\n        this.setState({\n    \t    allAgesVisible: event.target.checked\n        });\n    }\n\n    _renderFilters = () => {\n        const { visibleMeasures, allAgesVisible } = this.state;\n\n        return (\n            <Box pl={2} pr={2}>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"baseline\">\n                    {[POSITIVE_CASES_MEASURE_ID, DEATHS_MEASURE_ID].map(id => (\n                        <Grid key={id} item xs={6} sm={3}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        name={id}\n                                        checked={visibleMeasures.includes(id)} \n                                        onChange={this._onMeasureCheckBoxChange} \n                                        style ={{\n                                            color: MEASURE_COLOR_MAP[id]\n                                        }}\n                                    />\n                                }\n                                label={\n                                    <Typography variant=\"body2\" style={{ color: MEASURE_COLOR_MAP[id] }}>\n                                        <Translate id={MEASURE_LABEL_TRANSLATION_KEY_MAP[id]} />\n                                    </Typography>     \n                                }\n                            />\n                        </Grid>\n                    ))}\n                    <Grid key={\"showAllAges\"} item xs={6} sm={3}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    name={\"showAllAges\"}\n                                    style ={{\n                                        color: PALETTE.COLOR_2\n                                    }}\n                                    checked={allAgesVisible} \n                                    onChange={this._onAllAgesCheckBoxChange} \n                                />\n                            }\n                            label={\n                                <Typography variant=\"body2\">\n                                    <Translate id={\"statistics.showAllAges\"} />\n                                </Typography>     \n                            }\n                        />\n                    </Grid>\n                </Grid>\n            </Box>\n        )\n    }\n      \n    render() {\n        const { statisticsByAge, className } = this.props;\n\n        if(!statisticsByAge.loaded) {\n            return (\n                <Paper className={className}>\n                    <Translate id={\"loading\"} />\n                </Paper>\n            );\n        }\n\n        const { opacity, visibleMeasures, allAgesVisible } = this.state;\n        const { numberOfPositiveCases, numberOfDeaths } = statisticsByAge.data;\n\n        const data = numberOfPositiveCases\n            .map(item => {\n                const {measureId, isTotal, age, value} = item;\n                const numberOfDeathsItem = numberOfDeaths.find(x => x.measureId === measureId);\n                const isLessThenFiveDeaths = numberOfDeathsItem.isLessThenFive;\n                \n                return {\n                    measureId,\n                    isTotal,\n                    age: isTotal ? this.props.translate(\"statistics.allAges\") : age,\n                    [POSITIVE_CASES_MEASURE_ID]: value,\n                    [DEATHS_MEASURE_ID]: numberOfDeathsItem.value,\n                    isLessThenFiveDeaths: numberOfDeathsItem.isLessThenFive,\n                    [MEASURE_ACTUAL_VALUES_MAP[POSITIVE_CASES_MEASURE_ID]]: formatNumber(value, this.props.currentLanguage),\n                    [MEASURE_ACTUAL_VALUES_MAP[DEATHS_MEASURE_ID]]: isLessThenFiveDeaths ? \"< 5\" : formatNumber(numberOfDeathsItem.value, this.props.currentLanguage)\n                }\n            })\n            .filter(item => allAgesVisible ? true : !item.isTotal);\n\n        return (\n            <Paper className={className}>\n                <ChartTitle>\n                    <Translate id=\"statistics.statisticsByAge\"/>\n                    <Box pt={1}>\n                        <Typography align=\"center\" color=\"textSecondary\" component=\"p\">\n                            <Translate id=\"layout.statisticsByAgeAbout\" />\n                        </Typography>\n                    </Box>\n                </ChartTitle>\n                {this._renderFilters()}\n                <div style={{ width: '100%', height: '300px'}}>\n                    <ResponsiveContainer>\n                        <BarChart\n                            data={data}\n                            margin={{\n                                top: 20, right: 30, bottom: 20, left: 20,\n                            }}\n                        >\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"age\" tickFormatter={this._formatXAxis}/>\n                            <YAxis tickFormatter={this._formatYAxis}/>\n                            <Tooltip content={\n                                <CustomTooltip \n                                    translate={this.props.translate} \n                                    currentLanguage={this.props.currentLanguage}\n                                    measureIds={[POSITIVE_CASES_MEASURE_ID, DEATHS_MEASURE_ID]}\n                                    translationsMap={MEASURE_LABEL_TRANSLATION_KEY_MAP}\n                                    actualValuesKeys={MEASURE_ACTUAL_VALUES_MAP}\n                                />}\n                                cursor={{ fill: PALETTE.COLOR_1, fillOpacity: 0.3 }} \n                            />\n                            <Legend \n                                formatter={this._formatLegendItem}\n                                onClick={this._onLegendClick}\n                                onMouseOver={this._onLegendMouseEnter}\n                                onMouseOut={this._onLegendMouseLeave}\n                            />\n                            <Bar \n                                dataKey={POSITIVE_CASES_MEASURE_ID} \n                                stroke={MEASURE_COLOR_MAP[POSITIVE_CASES_MEASURE_ID]}\n                                fill={MEASURE_COLOR_MAP[POSITIVE_CASES_MEASURE_ID]}\n                                fillOpacity={opacity[POSITIVE_CASES_MEASURE_ID]}\n                                hide={!visibleMeasures.includes(POSITIVE_CASES_MEASURE_ID)}\n                            >\n                                <LabelList dataKey={MEASURE_ACTUAL_VALUES_MAP[POSITIVE_CASES_MEASURE_ID]} position=\"top\" />\n                            </Bar>\n                            <Bar \n                                dataKey={DEATHS_MEASURE_ID} \n                                stroke={MEASURE_COLOR_MAP[DEATHS_MEASURE_ID]}\n                                fill={MEASURE_COLOR_MAP[DEATHS_MEASURE_ID]}\n                                fillOpacity={opacity[DEATHS_MEASURE_ID]}\n                                hide={!visibleMeasures.includes(DEATHS_MEASURE_ID)}\n                            >\n                                <LabelList dataKey={MEASURE_ACTUAL_VALUES_MAP[DEATHS_MEASURE_ID]} position=\"top\" />\n                            </Bar>\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            </Paper>\n          );\n    }\n}\n\nStatisticsByAgeChart.propTypes = {\n    translate: PropTypes.func,\n    currentLanguage: PropTypes.string,\n    className: PropTypes.string,\n    statisticsByAge: PropTypes.object.isRequired,\n    statisticsActions: PropTypes.object\n};\n\nexport default connect(Container.mapStateToProps, Container.mapDispatchToProps)(StatisticsByAgeChart);\n","import React from \"react\";\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport { withStyles } from '@material-ui/core/styles';\n//import moment from 'moment';\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 30,\n}});\n\nclass LanguageToggle extends React.Component {\n    _onLanguageChange = (event) => { \n        const locale = event.target.value;\n        this.props.setActiveLanguage(locale);\n    }\n\n    render() {\n        if(!this.props.languages.length) {\n            return null;\n        }\n\n        const { classes } = this.props;\n\n        return (\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <Select\n                    native\n                    value={this.props.activeLanguage.code}\n                    onChange={this._onLanguageChange}\n                    input={<BootstrapInput />}\n                >\n                    {this.props.languages.map(lang => (\n                        <option key={lang.code} value={lang.code}>\n                            {lang.name}\n                        </option>\n                    ))}\n                </Select>  \n            </FormControl>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(withLocalize(LanguageToggle));\n","import React from \"react\";\nimport { Translate } from \"react-localize-redux\";\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { \n    AllMeasuresChart, CurrentSituationPanel, LanguageToggle, \n    HospitalisationsChart, StatisticsByAgeChart \n} from './components';\n\nconst footerItems = [\n    {\n        title: 'layout.about',\n        links: [\n        {\n            url: \"https://bitbucket.org/Sufflava/coronavirus-statistics-in-finland/src/master/web-site/\",\n            text: \"layout.sourceCode\"\n        }, \n        {\n            url: \"https://bitbucket.org/Sufflava/coronavirus-statistics-in-finland/src/master/data/\",\n            text: \"layout.usedData\"\n        }, \n        {\n            url: \"https://sufflavus.github.io/\",\n            text: \"layout.developerWebSite\"\n        }]\n    },\n    {\n        title: 'layout.officialResources',\n        links: [\n        {\n            url: \"https://thl.fi/en/web/infectious-diseases-and-vaccinations/what-s-new/coronavirus-covid-19-latest-updates/situation-update-on-coronavirus\",\n            text: \"layout.thlLastUpdate\"\n        }, \n        {\n            url: \"https://experience.arcgis.com/experience/d40b2aaf08be4b9c8ec38de30b714f26\",\n            text: \"layout.statisticsOnMap\"\n        }, \n        {\n            url: \"https://thl.fi/en/web/thlfi-en/statistics/statistical-databases/open-data/confirmed-corona-cases-in-finland-covid-19-\",\n            text: \"layout.thlOpenDataApi\"\n        }]\n    }\n];\n\nfunction Footer() {\n    return (\n        <Grid container spacing={4} justify=\"space-evenly\">\n            {footerItems.map((footer) => (\n                <Grid item xs={12} sm={6} key={footer.title}>\n                    <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                        <Translate id={footer.title} />\n                    </Typography>\n                    <ul>\n                        {footer.links.map((item) => (\n                            <li key={item.text}>\n                                <Link href={item.url} target=\"_blank\" rel=\"noreferrer\" variant=\"subtitle1\" color=\"textSecondary\">\n                                    <Translate id={item.text} />\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </Grid>\n            ))}\n        </Grid>\n    );\n}\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            <Translate id=\"layout.copyright\" />{' '}\n            <Link color=\"inherit\" href=\"https://sufflavus.github.io/\" target=\"_blank\" rel=\"noreferrer\">\n                Tatiana Shatilova\n            </Link>{' '}\n            {new Date().getFullYear()}\n        </Typography>\n    );\n}\n\nconst useStyles = theme => ({\n    '@global': {\n      ul: {\n        margin: 0,\n        padding: 0,\n        listStyle: 'none',\n      },\n    },\n    appBar: {\n      backgroundColor: theme.palette.white,\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n      flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n      flexGrow: 1,\n    },\n    link: {\n      margin: theme.spacing(1, 1.5),\n    },\n    heroContent: {\n      padding: theme.spacing(8, 0, 6),\n    },\n    cardHeader: {\n      backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n    },\n    cardPricing: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'baseline',\n      marginBottom: theme.spacing(2),\n    },\n    panel: {\n      marginBottom: theme.spacing(5),\n    },\n    footer: {\n      borderTop: `1px solid ${theme.palette.divider}`,\n      marginTop: theme.spacing(8),\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3),\n      [theme.breakpoints.up('sm')]: {\n        paddingTop: theme.spacing(6),\n        paddingBottom: theme.spacing(6),\n      },\n    },\n  });\n\nclass Layout extends React.Component {\n    render() {\n        const { classes } = this.props;\n        const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                            <Translate id=\"layout.siteName\" />\n                        </Typography>\n                        {/*<nav>\n                            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n                            <Translate id=\"layout.menuCharts\" />\n                            </Link>\n                            <Link variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\n                            <Translate id=\"layout.menuMap\" />\n                            </Link>\n                        </nav>*/}\n                        <LanguageToggle/>\n                    </Toolbar>\n                </AppBar>\n                {/* Hero unit */}\n                <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n                    <Box p={3}>\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            <Translate id=\"layout.pageTitle\" />\n                        </Typography>\n                        <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n                            <Translate id=\"layout.pageAbout\" />\n                        </Typography>\n                        <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n                            <Translate id=\"layout.officialDataInfo\" \n                                data={{ \n                                    thlLastUpdateLink: <Link href=\"https://thl.fi/en/web/infectious-diseases-and-vaccinations/what-s-new/coronavirus-covid-19-latest-updates/situation-update-on-coronavirus\" target=\"_blank\" rel=\"noreferrer\"><Translate id=\"layout.here\" /></Link>,\n                                    thlMapLink: <Link href=\"https://experience.arcgis.com/experience/d40b2aaf08be4b9c8ec38de30b714f26\" target=\"_blank\" rel=\"noreferrer\"><Translate id=\"layout.here\" /></Link>\n                                }} \n                            />\n                        </Typography>\n                    </Box>\n                </Container>\n                {/* End hero unit */}\n                <Container maxWidth=\"md\" component=\"main\">\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} className={classes.panel}>\n                            <CurrentSituationPanel className={classes.paper}/>\n                        </Grid>\n                        <Grid item xs={12} className={classes.panel}>\n                            <AllMeasuresChart className={fixedHeightPaper}/>\n                        </Grid>\n                        <Grid item xs={12} className={classes.panel}>\n                            <HospitalisationsChart className={fixedHeightPaper}/>\n                        </Grid>\n                        <Grid item xs={12} className={classes.panel}>\n                            <StatisticsByAgeChart className={fixedHeightPaper}/>\n                        </Grid>\n                    </Grid>\n                </Container>\n                {/* Footer */}\n                <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n                    <Footer/>\n                    <Box mt={5}>\n                        <Copyright />\n                    </Box>\n                </Container>\n                {/* End footer */}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Layout);","import React from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { withLocalize } from \"react-localize-redux\";\nimport enTranslations from \"./translations/global.en.json\";\nimport ruTranslations from \"./translations/global.ru.json\";\nimport Layout from './Layout';\n\nconst LANGUAGE_CODE = {\n    en: \"en\",\n    ru: \"ru\"\n};\n\nconst languages = [\n    { name: \"EN\", code: LANGUAGE_CODE.en },\n    { name: \"RU\", code: LANGUAGE_CODE.ru }\n];\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this._initTranslations();\n    }\n\n    _initTranslations = () => {\n        this.props.initialize({\n            languages,\n            options: {\n                renderToStaticMarkup,\n                renderInnerHtml: true,\n                defaultLanguage: LANGUAGE_CODE.en,\n                activeLanguage: LANGUAGE_CODE.en\n            }\n        });\n\n        this.props.addTranslationForLanguage(enTranslations, LANGUAGE_CODE.en);\n        this.props.addTranslationForLanguage(ruTranslations, LANGUAGE_CODE.ru);\n    }\n\n    render() {\n        return (\n            <Layout/>\n        );\n    }\n}\n\nexport default withLocalize(Main);\n","\nimport React from 'react';\nimport Main from './Main';\nimport './App.css';\n\nfunction App() {\n    return (\n        <Main />\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from \"react-dom\";\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\nimport { LocalizeProvider } from \"react-localize-redux\";\nimport App from './App';\nimport 'fontsource-roboto';\nimport './index.css';\n//import reportWebVitals from './reportWebVitals';\n\nconst store = createStore(rootReducer);\n\nrender(\n    <Provider store={store}>\n        <LocalizeProvider store={store}>\n            <App />\n        </LocalizeProvider>\n    </Provider>, \n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}